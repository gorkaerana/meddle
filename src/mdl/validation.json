{
    "Accountmessage": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "email_body": {
                "type_data": "Type : LongString\nRequired\nMaximum length : 1500",
                "description": "The body of the email sent to the notification recipient."
            },
            "subject": {
                "type_data": "Type : String\nRequired\nMaximum length : 255",
                "description": "Subject of the email sent to the notification recipient."
            },
            "default_lang": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "The default language for the email."
            }
        },
        "subcomponents": {}
    },
    "Appsecurityrule": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "help_content": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "UI-friendly help string."
            },
            "allow_custom_objects": {
                "type_data": "Type : Boolean\nRequired",
                "description": "If true, the rule can be applied to custom objects."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "A general description of the rule."
            }
        },
        "subcomponents": {
            "Appsecurityfield": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "multi_value": {
                        "type_data": "Type : Boolean",
                        "description": "If true, allows multiple values."
                    },
                    "picklist": {
                        "type_data": "Type : Picklist",
                        "description": "Reference to the Picklist component."
                    },
                    "type": {
                        "type_data": "Type : Enum\nRequired\nAllowed values : OBJECT|PICKLIST|BOOLEAN|",
                        "description": "The type of the field."
                    },
                    "object": {
                        "type_data": "Type : Object",
                        "description": "Reference to Object component."
                    }
                },
                "subcomponents": {}
            },
            "Appsecurityassignment": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "field": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "Reference to an object field subcomponent in the format Field.{field_name}. For example, Field.study_migration__v."
                    },
                    "securityrule": {
                        "type_data": "Type : ComponentReference",
                        "description": "(Read-only) Reference to the parent Appsecurityrule component."
                    },
                    "appsecurityfield": {
                        "type_data": "Type : ComponentReference",
                        "description": "Legacy reference to Appsecurityfield subcomponent. As of 24R1.2, this attribute has been deprecated and replaced by securityfield."
                    },
                    "securityfield": {
                        "type_data": "Type : SubcomponentReference",
                        "description": "Reference to Appsecurityfield subcomponent."
                    },
                    "object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "Reference to Object component in the format Object.{object_name}. For example, Object.procedure__v."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Atomicsecurity": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "object": {
                "type_data": "Type : Object\nRequired",
                "description": "The Object the security applies to. For example, Object.country__v"
            },
            "object_lifecycle": {
                "type_data": "Type : Objectlifecycle\nRequired",
                "description": "The Objectlifecycle the security applies to. For example, Objectlifecycle.general_lifecycle__c"
            },
            "state": {
                "type_data": "Type : Objectlifecyclestate\nRequired",
                "description": "The Objectlifecyclestate of the Objectlifecycle the security applies to. For example, Objectlifecyclestate.active_state__c"
            }
        },
        "subcomponents": {
            "Fieldsecurity": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "role": {
                        "type_data": "Type : Objectlifecyclerole\nRequired",
                        "description": "The Objectlifecyclerole of the Objectlifecycle the security applies to. \nFor example, Objectlifecyclerole.editor__v or Objectlifecyclerole.DEFAULT if specifying the default for all roles."
                    },
                    "type": {
                        "type_data": "Type : Enum\nRequired\nAllowed values : hide__v|read__v|edit__v|",
                        "description": "The type of permission to apply."
                    },
                    "fields": {
                        "type_data": "Type : Field\nRequired\nAllows multiple values",
                        "description": "The fields to apply this permission to."
                    }
                },
                "subcomponents": {}
            },
            "Objectcontrolsecurity": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "role": {
                        "type_data": "Type : Objectlifecyclerole\nRequired",
                        "description": "The Objectlifecyclerole of the Objectlifecycle the security applies to. \nFor example, Objectlifecyclerole.editor__v or Objectlifecyclerole.DEFAULT if specifying the default for all roles."
                    },
                    "type": {
                        "type_data": "Type : Enum\nRequired\nAllowed values : hide__v|view__v|",
                        "description": "The type of permission to apply."
                    },
                    "object_controls": {
                        "type_data": "Type : Objectcontrol\nRequired\nAllows multiple values",
                        "description": "The object control permissions to apply. Learn more about Object Control Permissions in Vault Help."
                    }
                },
                "subcomponents": {}
            },
            "Actionsecurity": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "role": {
                        "type_data": "Type : Objectlifecyclerole\nRequired",
                        "description": "The Objectlifecyclerole of the Objectlifecycle the security applies to. \nFor example, Objectlifecyclerole.editor__v or Objectlifecyclerole.DEFAULT if specifying the default for all roles."
                    },
                    "type": {
                        "type_data": "Type : Enum\nRequired\nAllowed values : hide__v|view__v|execute__v|",
                        "description": "The type of permission to apply."
                    },
                    "object_actions": {
                        "type_data": "Type : Objectaction\nAllows multiple values",
                        "description": "The Object level action(s) to apply this permission to."
                    },
                    "lifecycle_actions": {
                        "type_data": "Type : Objectlifecyclestateuseraction\nAllows multiple values",
                        "description": "The Lifecycle level action(s) to apply this permission to."
                    }
                },
                "subcomponents": {}
            },
            "Workflowactionsecurity": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "role": {
                        "type_data": "Type : Objectlifecyclerole\nRequired",
                        "description": "The Objectlifecyclerole of the Objectlifecycle the security applies to. \nFor example, Objectlifecyclerole.editor__v or Objectlifecyclerole.DEFAULT if specifying the default for all roles."
                    },
                    "type": {
                        "type_data": "Type : Enum\nRequired\nAllowed values : hide__v|execute__v|",
                        "description": "The type of permission to apply."
                    },
                    "workflow_actions": {
                        "type_data": "Type : Enum\nAllows multiple values\nAllowed values : addparticipants|cancel|emailparticipants|removecontent|updateworkflowduedate|",
                        "description": "The workflow action to apply."
                    },
                    "workflow_task_actions": {
                        "type_data": "Type : Enum\nAllows multiple values\nAllowed values : cancel|reassign|updateduedate|",
                        "description": "The workflow task action to apply."
                    }
                },
                "subcomponents": {}
            },
            "Relationshipsecurity": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "role": {
                        "type_data": "Type : Objectlifecyclerole\nRequired",
                        "description": "The Objectlifecyclerole of the Objectlifecycle the security applies to. \nFor example, Objectlifecyclerole.editor__v or Objectlifecyclerole.DEFAULT if specifying the default for all roles."
                    },
                    "type": {
                        "type_data": "Type : Enum\nRequired\nAllowed values : read__v|edit__v|",
                        "description": "The type of permission to apply."
                    },
                    "document_fields": {
                        "type_data": "Type : Docfield\nAllows multiple values",
                        "description": "Lists the object fields corresponding to the object-to-document inbound relationship on the specified object."
                    },
                    "object_fields": {
                        "type_data": "Type : Field\nAllows multiple values",
                        "description": "Lists the object fields corresponding to the object-to-object relationship on the specified object."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Casechildconfig": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "object_key": {
                "type_data": "Type : String\nRequired\nMaximum length : 1500",
                "description": "The object type name for the child section. For example, case_response__v.phone__v."
            },
            "field_keys": {
                "type_data": "Type : String\nRequired\nAllows multiple values\nMaximum length : 1500",
                "description": "A list of child object field names. For example, [\\\"source__v\\\",\\\"link__sys\\\"]."
            },
            "parent_field_key": {
                "type_data": "Type : String\nRequired\nMaximum length : 1500",
                "description": "The name of the parent object. For example, case_request__v."
            },
            "save_all_on_create": {
                "type_data": "Type : Boolean",
                "description": "If true, users must save all information entered in this section before continuing the input process."
            },
            "auto_suggest_faqs": {
                "type_data": "Type : Boolean",
                "description": "If true, MedInquiry will automatically send incoming emails to an FAQ and suggest a standard response."
            },
            "request_details_field_key": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "The name of the field MedInquiry will use for FAQ matching."
            },
            "grandparent_field_key": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "The name of the grandparent object. For example, case__v."
            },
            "children": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "A list of the section\u2019s children, if any exist."
            },
            "config_key": {
                "type_data": "Type : String\nRequired\nMaximum length : 1500",
                "description": "The full name of the section including parent and grandparent sections. For example, case_request__v.case_response__v.phone__v."
            },
            "order": {
                "type_data": "Type : Number",
                "description": "The order in which the child section appears within the Case Contact section."
            }
        },
        "subcomponents": {}
    },
    "Checklisttype": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "target_object": {
                "type_data": "Type : Object\nRequired",
                "description": "The object the checklist applies to."
            },
            "target_object_type": {
                "type_data": "Type : Objecttype\nRequired",
                "description": "The target object\u2019s Objecttype. \nOptional in some Vault Applications."
            },
            "version_controlled": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the checklist type is version controlled. Learn more about checklist versioning in Vault Help."
            }
        },
        "subcomponents": {
            "Checklistmatchingfield": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "target_matching_field": {
                        "type_data": "Type : Subcomponent",
                        "description": "The field on the target object. This is used to match a value from the target object record with the corresponding matching field value on the Checklist Design object."
                    },
                    "target_object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The object the checklist applies to."
                    },
                    "checklist_design_matching_field": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The field on the checklist design object. This is used to match a value from the Checklist Design object record with the corresponding matching field value on the target object."
                    },
                    "checklist_design_object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The object the checklist design applies to."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Customwebapi": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "api_group": {
                "type_data": "Type : ComponentReference\nRequired",
                "description": "The Webapigroup to which the custom web api is assigned."
            },
            "checksum": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Used to check data for errors."
            },
            "endpoint_name": {
                "type_data": "Type : String\nRequired\nMaximum length : 1500",
                "description": "The endpoint name as specified in the WebApiInfo annotation."
            },
            "minimum_version": {
                "type_data": "Type : String\nRequired\nMaximum length : 1500",
                "description": "The minimum Vault REST API version required to use the custom web API as specified in the WebApiInfo annotation."
            },
            "source_code": {
                "type_data": "Type : SdkCode\nMaximum length : 1048576",
                "description": "The Vault Java SDK source code for this custom web API."
            }
        },
        "subcomponents": {}
    },
    "Dashboard": {
        "attributes": {
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "A general description of the dashboard."
            },
            "editors": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 300",
                "description": "Users with the Editor permission required to edit dashboards."
            },
            "viewers": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 300",
                "description": "Users with the Viewer permission required to view dashboards."
            },
            "dashboard_markup": {
                "type_data": "Type : XMLString\nRequired\nMaximum length : 32000",
                "description": "Describes the layout of the dashboard."
            },
            "tags": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500\nOrdered : True",
                "description": "A list of tags associated with the dashboard."
            }
        },
        "subcomponents": {}
    },
    "Docatomicsecurity": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the field is active."
            },
            "document_lifecycle": {
                "type_data": "Type : Doclifecycle\nRequired",
                "description": "Indicates the lifecycle that atomic security applies to."
            },
            "state": {
                "type_data": "Type : String\nRequired\nMaximum length : 1500",
                "description": "Indicates the lifecycle state that atomic security applies to."
            }
        },
        "subcomponents": {
            "Docworkflowactionsecurity": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the field is active."
                    },
                    "role": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "Indicates the role override that the permission applies to."
                    },
                    "type": {
                        "type_data": "Type : Enum\nRequired\nAllowed values : hide__v|view__v|execute__v|",
                        "description": "Indicates the permission type."
                    },
                    "workflow_actions": {
                        "type_data": "Type : Enum\nAllows multiple values\nOrdered : True\nAllowed values : cancel|addparticipants|removecontent|emailparticipants|updateworkflowduedate|",
                        "description": "Indicates the active workflow action that the permission applies to."
                    },
                    "workflow_task_actions": {
                        "type_data": "Type : Enum\nAllows multiple values\nOrdered : True\nAllowed values : cancel|reassign|updateduedate|",
                        "description": "Indicates the active workflow task action that the permission applies to."
                    }
                },
                "subcomponents": {}
            },
            "Docactionsecurity": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the field is active."
                    },
                    "role": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "Indicates the role override that the permission applies to."
                    },
                    "type": {
                        "type_data": "Type : Enum\nRequired\nAllowed values : hide__v|view__v|execute__v|",
                        "description": "Indicates the permission type."
                    },
                    "lifecycle_actions": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500\nOrdered : True",
                        "description": "Indicates the user action that the permission applies to."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Docfield": {
        "attributes": {
            "picklist": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Reference to Picklist component. \nUsed for the Picklist field type."
            },
            "relationship_name": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Auto-generated name based on the field name and the Vault object."
            },
            "scale": {
                "type_data": "Type : Number\nMaximum value : 9",
                "description": "Applicable to fields of type number only."
            },
            "queryable": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the field is queryable through VQL. This attribute is read-only."
            },
            "default_security": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "options: editable| readonly| hidden|"
            },
            "secure_relationship": {
                "type_data": "Type : Boolean",
                "description": "Enables relationship security on a referenced object."
            },
            "shared": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the field is shared or local."
            },
            "multi_value": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the field accepts multiple values."
            },
            "display_section": {
                "type_data": "Type : String\nRequired\nMaximum length : 1500",
                "description": "Name of the display section. For example, Docfieldlayout.general_properties__v"
            },
            "formula": {
                "type_data": "Type : Expression\nMaximum length : 4000",
                "description": "An expression surrounded in [ ] character combination."
            },
            "blank_fields": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "options: zeros| blanks|"
            },
            "controlling_field": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Controlling field name, if any."
            },
            "editable": {
                "type_data": "Type : Boolean",
                "description": "Whether the field is editable by the user. \nThe value here is specific to the user and depends on security_overrides."
            },
            "security_override_editable": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "To specify users: User.user@domain.com. \nTo specify groups: Group.public_key__v."
            },
            "security_override_readonly": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "To specify users: User.user@domain.com. \nTo specify groups: Group.public_key__v."
            },
            "security_override_hidden": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "To specify users: User.user@domain.com.\nTo specify groups: Group.public_key__v."
            },
            "set_on_create_only": {
                "type_data": "Type : Boolean",
                "description": "Can only set if the user has a proper MDL admin permission."
            },
            "hidden": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the field is hidden in the UI. \nThe value here is specific to the user and depends on security_overrides."
            },
            "defined_in": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "The Doc Type this field belongs to (local fields only). e.g. Doctype.my_doc_type__c"
            },
            "used_in": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "The Doc Type(s) this field is used in (shared fields only). e.g. Doctype.my_doc_type__c"
            },
            "relationship_type": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Can only return \u201creference\u201d at this time."
            },
            "lookupObjectFieldKey": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Reference to Doc field component. Used for the Lookup field type."
            },
            "lookupObjectId": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Reference to Object component. Used for the Lookup field type."
            },
            "lookupFieldId": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Reference to Object field component. Used for the Lookup field type."
            },
            "relationship_criteria": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "The VQL used to constrain records in the referenced Object"
            },
            "no_copy": {
                "type_data": "Type : Boolean",
                "description": "When true a value will not be set in a copied document. Cannot be true when required is true."
            },
            "can_change_section": {
                "type_data": "Type : Boolean",
                "description": "For internal Veeva use only."
            },
            "can_change_required": {
                "type_data": "Type : Boolean",
                "description": "For internal Veeva use only."
            },
            "can_change_disabled": {
                "type_data": "Type : Boolean",
                "description": "For internal Veeva use only."
            },
            "can_change_multiple": {
                "type_data": "Type : Boolean",
                "description": "For internal Veeva use only."
            },
            "can_change_no_copy": {
                "type_data": "Type : Boolean",
                "description": "For internal Veeva use only."
            },
            "help_content": {
                "type_data": "Type : String\nMaximum length : 500",
                "description": "UI-friendly help string"
            },
            "max_length": {
                "type_data": "Type : Number\nMaximum value : 1500\nMinimum value : 1",
                "description": "Applicable to fields of type string only."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the field is active."
            },
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 1500",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "required": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the field is required."
            },
            "scope": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "options: Document| DocumentVersion| \nRegular users can create Document scoped fields only.\nCreating DocumentVersion scoped fields requires special security permissions.\n"
            },
            "min_value": {
                "type_data": "Type : Number",
                "description": "Applicable to fields of type number only."
            },
            "max_value": {
                "type_data": "Type : Number",
                "description": "(Number fields only) If the value is greater than 500 on Objectreference type fields where multi_value is set to true, VQL queries return an unordered list."
            },
            "object": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Possible values supported are names of VOF objects, User, Group, and Lifecycle."
            },
            "type": {
                "type_data": "Type : String\nRequired\nMaximum length : 1500",
                "description": "options: String| Number| Boolean| Picklist| Date| URL| Formula| ObjectReference| Lookup|"
            },
            "default_value": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "The default value used when the field is not set."
            }
        },
        "subcomponents": {}
    },
    "Docfielddependency": {
        "attributes": {
            "doctype": {
                "type_data": "Type : Doctype",
                "description": "The Doctype the field dependency applies to."
            },
            "docfield": {
                "type_data": "Type : Docfield",
                "description": "The Docfield the field dependency applies to."
            },
            "docfield_multi_value": {
                "type_data": "Type : String\nAllows multiple values",
                "description": "Specifies the field value or values that trigger the action."
            },
            "docfield_value": {
                "type_data": "Type : String",
                "description": "Specifies the field value that triggers the the action. This attribute cannot support individual values containing a comma, for example, \u201cTanzania, United Republic of\u201d. This attribute is deprecated as of 19R2.3."
            },
            "deprule_docfield": {
                "type_data": "Type : Docfield\nRequired",
                "description": "Specifies the Docfield the dependency rule applies to."
            },
            "deprule_docfield_action": {
                "type_data": "Type : Enum\nRequired\nAllowed values : isHidden|isReadOnly|isVisible|isRequired|picklist|",
                "description": "The action applied. Specifies the actions to take on the field values."
            },
            "deprule_docfield_multi_values": {
                "type_data": "Type : String\nAllows multiple values",
                "description": "The value(s) available when deprule_docfield_action is picklist."
            },
            "deprule_docfield_values": {
                "type_data": "Type : String",
                "description": "The value(s) available when deprule_docfield_action is picklist. This attribute cannot support individual values containing a comma, for example, \u201cTanzania, United Republic of\u201d. This attribute is deprecated as of 19R2.3."
            },
            "lifecycle": {
                "type_data": "Type : String",
                "description": "The Doclifecycle the dependency rule applies to."
            },
            "state": {
                "type_data": "Type : String",
                "description": "The Doclifecycle state the dependency rule applies to."
            },
            "role": {
                "type_data": "Type : String",
                "description": "The Doclifecycle role the dependency rule applies to."
            }
        },
        "subcomponents": {}
    },
    "Docfieldlayout": {
        "attributes": {
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Whether the layout is active."
            },
            "allow_field_assignment": {
                "type_data": "Type : Boolean",
                "description": "For internal Veeva use only."
            },
            "show_in_edit_mode": {
                "type_data": "Type : Boolean",
                "description": "For internal Veeva use only."
            },
            "panel": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "For internal Veeva use only."
            },
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "icon": {
                "type_data": "Type : Enum\nAllowed values : UNDEFINED|AUSTRALIA|AUSTRIA|BELGIUM|CANADA|CHINA|EUROPEAN_UNION|FRANCE|GERMANY|GLOBAL|IRELAND|ITALY|JAPAN|NETHERLANDS|SPAIN|SWEDEN|SWITZERLAND|UNITED_KINGDOM|UNITED_STATES|VEEVA|",
                "description": "The icon to display in the section header."
            },
            "order": {
                "type_data": "Type : Number",
                "description": "The order of the section relatve to other sections."
            },
            "fields": {
                "type_data": "Type : Docfield\nAllows multiple values\nOrdered : True",
                "description": "The Docfield\u2019s listed in order they should appear in the section."
            }
        },
        "subcomponents": {}
    },
    "Doclifecycle": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the component is active."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "General description for this lifecycle."
            },
            "state_labels": {
                "type_data": "Type : String\nRequired\nAllows multiple values\nMaximum length : 1500\nOrdered : True",
                "description": "Lists lifecycle state labels (by name) defined for this lifecycle. The order defined here must correspond to the order in labeled_states."
            },
            "labeled_states": {
                "type_data": "Type : Doclifecyclestate\nRequired\nAllows multiple values\nOrdered : True",
                "description": "Lists \u201cspecial states\u201d (by name). The order of the state in this list dictates which state from state_labels is assigned to the specific special state."
            },
            "expiration": {
                "type_data": "Type : XMLString\nMaximum length : 32000",
                "description": "Expiration rules."
            },
            "signature_pages": {
                "type_data": "Type : XMLString\nMaximum length : 32000",
                "description": "Signature page rules."
            },
            "overlays": {
                "type_data": "Type : XMLString\nMaximum length : 32000",
                "description": "The overlay template applied to a speciifc lifecycle."
            }
        },
        "subcomponents": {
            "Doclifecyclerole": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean\nRequired",
                        "description": "Indicates whether the component is active."
                    },
                    "description": {
                        "type_data": "Type : String\nMaximum length : 255",
                        "description": "General description for this lifecycle."
                    },
                    "application_role": {
                        "type_data": "Type : String\nRequired\nMaximum length : 255",
                        "description": "The name__v field value of the application_role__v record this role corresponds to."
                    },
                    "note_color": {
                        "type_data": "Type : Enum\nAllowed values : Dark Orange|Orange|Dark Yellow|Yellow|Lime|Green|Aqua|Royal|Purple|Lilac|Pink|Salmon|",
                        "description": "Annotations made by users in this role will use this color by default."
                    },
                    "security_options": {
                        "type_data": "Type : XMLString\nMaximum length : 32000",
                        "description": "The default security rules."
                    }
                },
                "subcomponents": {}
            },
            "Doclifecyclestate": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 128",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean\nRequired",
                        "description": "Indicates whether the component is active."
                    },
                    "description": {
                        "type_data": "Type : String\nMaximum length : 255",
                        "description": "General description for this lifecycle."
                    },
                    "order": {
                        "type_data": "Type : Number\nRequired",
                        "description": "The relative order in which the action displays. For example, order 1 will display before order 2."
                    },
                    "cancel_state": {
                        "type_data": "Type : Doclifecyclestate",
                        "description": "Indicates the state documents enter when their document workflow is cancelled."
                    },
                    "skip_cancel_state": {
                        "type_data": "Type : Boolean",
                        "description": "If set to true, documents stay in their current state when their workflow is cancelled. If set to false or omitted, documents enter the state defined by cancel_state when the workflow is cancelled."
                    },
                    "entry_criteria": {
                        "type_data": "Type : XMLString\nMaximum length : 128000",
                        "description": "The criteria, and the conditions under which they are enforced, which must be satisfied for a document to enter this state."
                    },
                    "entry_action": {
                        "type_data": "Type : XMLString\nMaximum length : 128000",
                        "description": "The actions, and the conditions under which they are executed, which are performed when a document enters this state."
                    },
                    "user_action": {
                        "type_data": "Type : XMLString\nMaximum length : 128000",
                        "description": "The actions, and the conditions under which they are available, which a user can execute when a document is in this state."
                    },
                    "security_settings": {
                        "type_data": "Type : XMLString\nMaximum length : 32000",
                        "description": "The actions a user, in each role, can perform when a document is in this state."
                    }
                },
                "subcomponents": {}
            },
            "Doclifecycleevent": {
                "attributes": {
                    "active": {
                        "type_data": "Type : Boolean\nRequired",
                        "description": "Indicates whether the component is active."
                    },
                    "event": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "The type of event action."
                    },
                    "rule": {
                        "type_data": "Type : XMLString\nRequired\nMaximum length : 32000",
                        "description": "The defined rules and conditions for entry criteria, entry actions, or user actions."
                    },
                    "order": {
                        "type_data": "Type : Number\nRequired",
                        "description": "The relative order in which the action displays. For example, order 1 will display before order 2."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Docmatchingrule": {
        "attributes": {
            "lifecycle": {
                "type_data": "Type : Doclifecycle\nRequired",
                "description": "The lifecycle this rule applies to."
            },
            "role": {
                "type_data": "Type : Doclifecyclerole\nRequired",
                "description": "The role this rule applies to."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the component is active."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "General description for this rule."
            },
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            }
        },
        "subcomponents": {
            "Docmatchingcriterion": {
                "attributes": {
                    "object_field": {
                        "type_data": "Type : Field\nRequired",
                        "description": "The field of the object to match on."
                    },
                    "data_field": {
                        "type_data": "Type : Docfield\nRequired",
                        "description": "The field on the document to match on."
                    },
                    "object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The Object the matching rule is defined on."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Docparticipantrule": {
        "attributes": {
            "lifecycle": {
                "type_data": "Type : Doclifecycle\nRequired",
                "description": "The document lifecycle the rule applies to."
            },
            "role": {
                "type_data": "Type : Doclifecyclerole\nRequired",
                "description": "The lifecycle role the rule applies to."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the component is active."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "A general description of the rule."
            },
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            }
        },
        "subcomponents": {
            "Docparticipantcriterion": {
                "attributes": {
                    "object_field": {
                        "type_data": "Type : Field\nRequired",
                        "description": "The field of the object the rule is defined on."
                    },
                    "data_field": {
                        "type_data": "Type : Docfield\nRequired",
                        "description": "The field on the document the rule is defined on."
                    },
                    "object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The Object the participant rule is defined on. This can only be workflow_role_setup__v."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Docrelationshiptype": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the component is active."
            },
            "single_use": {
                "type_data": "Type : Boolean",
                "description": "True when only one relationship of this type can be created for the source document."
            },
            "target_doctype": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "The Doctype of the related document."
            },
            "source_version_specific": {
                "type_data": "Type : Boolean",
                "description": "Whether the relationship is bound to the current version of the source document."
            },
            "carry_forward_source_specific": {
                "type_data": "Type : Boolean",
                "description": "Whether the relationship will be brought forward when the source document is versioned."
            },
            "target_version_specific": {
                "type_data": "Type : Boolean",
                "description": "Whether the relationship is bound to the current version of the target document."
            },
            "carry_forward_target_specific": {
                "type_data": "Type : Boolean",
                "description": "Whether the relationship will be brought forward when the target document is versioned."
            },
            "relationship_filter": {
                "type_data": "Type : XMLString\nMaximum length : 32000",
                "description": "A criteria which restricts the documents that can be related using this type."
            }
        },
        "subcomponents": {}
    },
    "Doctype": {
        "attributes": {
            "milestone_types": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "The type of milestone."
            },
            "rendition_types": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "The list of Renditiontype names supported."
            },
            "allow_attachments": {
                "type_data": "Type : Boolean",
                "description": "Whether documents of this type can have attachments."
            },
            "available_lifecycles": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "The list of Doclifecycle names. If none are specified, the default value is inherited from parent or base."
            },
            "default_workflows": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "The list consists of Doclifecycle/Workflow combinations separated by a colon (:) (e.g., promotional_field__c:start_mld_review__c)."
            },
            "processes": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "The list of process names. \nThese come from processes picklists."
            },
            "etmf_department": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "The department name from the etmf_departmnet picklist \nAvailable in eTMF Vaults only."
            },
            "doctype_group": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "List of Document Group (doc_type_group__v) linked to this Doctype."
            },
            "etmf_rm_v2": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "eTMF Reference Model V2 Hierarchy Item external id, (e.g.,tmf_rm_v2_04.02) \nAvailable in eTMF Vaults only."
            },
            "etmf_rm_v3": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "eTMF Reference Model V3 Hierarchy Item external id, (e.g., tmf_rm_v3_04.02) \nAvailable in eTMF Vaults only."
            },
            "clinical_docs_rm": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Vault Clinical Docs Hierarchy Item id. \nAvailable in eTMF Vaults only."
            },
            "document_number_format": {
                "type_data": "Type : String\nMaximum length : 512",
                "description": "The document numbering pattern. If none are specified, the default value is inherited from parent or base"
            },
            "document_name_format": {
                "type_data": "Type : String\nMaximum length : 512",
                "description": "The document numbering pattern. If none are specified the default value is inherited from parent or base \nIf not specified at root, the default is:{FileName}"
            },
            "enable_suggested_links_source": {
                "type_data": "Type : Boolean",
                "description": "Each document type, subtype, and classification can be enabled or disabled for the Suggest Links action. \nAvailable in PromoMats Vaults only."
            },
            "enable_suggested_links_target": {
                "type_data": "Type : Boolean",
                "description": "Each document type, subtype, and classification can be enabled as eligible or not eligible for Suggested Links references. \nAvailable in PromoMats Vaults only."
            },
            "enable_binder_thumbnail": {
                "type_data": "Type : Boolean",
                "description": "Use a document from within the binder as the binder thumbnail instead of the standard Vault binder icon."
            },
            "binder_unbound_document_display_option": {
                "type_data": "Type : Enum\nAllowed values : latest_version|latest_viewable_version|latest_steady_state_version|",
                "description": "Select display options for unbound documents."
            },
            "create_document_permissions": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "The list of group or user IDs in the form of user:username or Group.name__v"
            },
            "create_binder_permissions": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "The list of group or user IDs in the form of user:username or Group.name__v"
            },
            "role_defaulting_editors": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "The list of group or user IDs in the form of user:username or Group.name__v"
            },
            "role_defaulting_viewers": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "The list of group or user IDs in the form of user:username or Group.name__v"
            },
            "role_defaulting_consumers": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "The list of group or user IDs in the form of user:username or Group.name__v"
            },
            "inherit_doctype_groups": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the doctype_group values are inherited from the parent Doctype."
            },
            "regen_doc_name_on_save": {
                "type_data": "Type : Boolean",
                "description": "Whether auto-generated names should be refreshed when saving the document."
            },
            "relationship_types": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "The list of Docrelationshiptype names supported."
            },
            "filters": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "Names of fields for document fields using MDL notation (e.g., Docfield.field__v) \nAdditional special filters: date_search| user_search| version_search| file_format_search|"
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the field is active."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 500",
                "description": "A general description of the Doctype."
            },
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 200",
                "description": "UI-friendly string."
            },
            "fields": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "The list of Docfield components linked to this Doctype."
            }
        },
        "subcomponents": {}
    },
    "Documentaction": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language. Although you can enter up to 60 characters, the Vault UI only displays the first 40 characters."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "user_input_object_type": {
                "type_data": "Type : Objecttype",
                "description": "If your action takes user input, identifies the user input object type."
            },
            "user_input_object": {
                "type_data": "Type : Object",
                "description": "If your action takes user input, identifies the user input object."
            },
            "icon": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Specifies the icon to display for your action in the Vault UI Actions menu. If omitted, no icon is displayed and the action is not eligible to appear in the the most frequently used section of the Action Bar. See the Vault Java SDK Documentation for a list of allowed values."
            },
            "lifecycle": {
                "type_data": "Type : Doclifecycle",
                "description": "The lifecycle where this document action is available."
            },
            "checksum": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Used to check data for errors."
            },
            "usages": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "Specifies where in Vault this action is available for configuration and execution. For example, User Action or Entry Action. UNSPECIFIED means the action is available everywhere document actions are supported."
            },
            "source_code": {
                "type_data": "Type : SdkCode\nMaximum length : 1048576",
                "description": "The source of this document action. For example, Custom means this is a custom action developed with the Vault Java SDK."
            }
        },
        "subcomponents": {}
    },
    "Documentstagegroup": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "document_lifecycle": {
                "type_data": "Type : Doclifecycle\nRequired",
                "description": "A component reference to Doclifecycle."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "A general description of the lifecycle stage group."
            }
        },
        "subcomponents": {
            "Documentstage": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "document_lifecycle_states_ref": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "A component reference to Doclifecyclestate."
                    },
                    "description": {
                        "type_data": "Type : String\nMaximum length : 255",
                        "description": "A general description for this document stage."
                    },
                    "order": {
                        "type_data": "Type : Number\nRequired\nMinimum value : 1",
                        "description": "A number automatically assigned to a stage after it\u2019s created and represents the order of stages in a stage group."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Emailprocessor": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "checksum": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Used to check data for errors."
            },
            "source_code": {
                "type_data": "Type : SdkCode\nMaximum length : 1048576",
                "description": "The source of this email processor. For example, Custom means this is a custom email processor developed with the Vault Java SDK."
            },
            "allowed_senders": {
                "type_data": "Type : Enum\nRequired\nAllows multiple values\nAllowed values : VAULT_USERS_AND_PERSONS|VAULT_USERS|VAULT_GROUPS|",
                "description": "Indicates the type of senders from whom this email processor can receive emails."
            }
        },
        "subcomponents": {}
    },
    "Formattedoutput": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "root_object_type": {
                "type_data": "Type : Objecttype\nRequired",
                "description": "Root Object for the formatted output if the object has object types."
            },
            "root_object": {
                "type_data": "Type : Object\nRequired",
                "description": "Root Object for the formatted output, for example, Application."
            },
            "template_file": {
                "type_data": "Type : File\nRequired",
                "description": "A template XFA PDF file to upload and attach."
            }
        },
        "subcomponents": {}
    },
    "Inboundemailaddress": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "authenticate_sender": {
                "type_data": "Type : Boolean",
                "description": "If true, Vault checks the sender\u2019s authenticity via Sender Policy Framework (SPF) and DomainKeys Identified Mail (DKIM). Can only be set to false for certain Veeva-provided email processors. Use caution when setting to false as unauthenticated emails may come from spoofed addresses. Must always be set to true if allowed_senders = VAULT_USERS or VAULT_GROUPS."
            },
            "email_username": {
                "type_data": "Type : String\nRequired\nMaximum length : 64",
                "description": "The username of the inbound email address, for example, inquiries in inquiries@verteopharma.veevavault.com."
            },
            "email_processor_user": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "The default originating user when the sender\u2019s email address does not belong to a user in this Vault."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "A general description of the inbound email address."
            },
            "email_processor": {
                "type_data": "Type : ComponentReference\nRequired",
                "description": "The email processor to run when an email is sent to this address."
            },
            "allowed_sender_groups": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "If allowed_senders = VAULT_Groups, stores the groups whose users are allowed to send emails to this address. There is a maximum of five groups."
            },
            "allowed_senders": {
                "type_data": "Type : Enum\nRequired\nAllowed values : VAULT_USERS_AND_PERSONS|VAULT_USERS|VAULT_GROUPS|UNSPECIFIED|",
                "description": "Indicates the type of senders from whom this inbound email address can receive emails."
            }
        },
        "subcomponents": {}
    },
    "Integrationrule": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "integration_point": {
                "type_data": "Type : String\nMaximum length : 40",
                "description": "Reference to Integration Point by API Name to allow for defining and retrieving of specific Integration Rules related to the Connection and Integration Point."
            },
            "primary_query_object": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Constrains this integration rule to a particular object or document and allows access to the relationships on that object or document. If omitted, field rules are not constrained and cannot access relationships."
            },
            "connection": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "Reference to the connection record by api_name__sys."
            }
        },
        "subcomponents": {
            "Queryobjectrule": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "query_object": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "Name of the mapped query object object_name__c. Must be specified as returned in the VQL response."
                    },
                    "filter_clause": {
                        "type_data": "Type : Expression\nMaximum length : 4000",
                        "description": "A Criteria VQL expression containing the logic for this query object rule."
                    }
                },
                "subcomponents": {}
            },
            "Fieldrule": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "target_field_lookup": {
                        "type_data": "Type : Subcomponent",
                        "description": "If target_object_field is an object reference field corresponding to an object with an outbound relationship to this field rule\u2019s target_object, this is a set field which is a unique field related to the object referenced in the field rule\u2019s target_object. Only supported for object query_field_types."
                    },
                    "query_field_select": {
                        "type_data": "Type : Subcomponent",
                        "description": "If populated, overrides the query_field. Used in cases where you need to transform the data with a VQL function such as TONAME(). If an alias (AS) exists in this field, that alias must also exist in the query_field."
                    },
                    "query_field_type": {
                        "type_data": "Type : Enum\nAllowed values : document_boolean__sys|document_component__sys|document_date__sys|document_datetime__sys|document_formula__sys|document_lookup__sys|document_number__sys|document_object_reference__sys|document_picklist__sys|document_text__sys|document_url__sys|vobject_boolean__sys|vobject_component__sys|vobject_currency__sys|vobject_date__sys|vobject_datetime__sys|vobject_document_reference__sys|vobject_formula__sys|vobject_id__sys|vobject_longtext__sys|vobject_lookup__sys|vobject_number__sys|vobject_object_reference__sys|vobject_parent_object_reference__sys|vobject_picklist__sys|vobject_richtext__sys|vobject_text__sys|",
                        "description": "The type (object or document) and data type of the query field."
                    },
                    "target_obj_field_ref_obj": {
                        "type_data": "Type : Object",
                        "description": ""
                    },
                    "query_object": {
                        "type_data": "Type : String\nMaximum length : 100",
                        "description": "Name of the mapped query object object_name__c. Must be specified as returned in the VQL response."
                    },
                    "query_field": {
                        "type_data": "Type : String\nMaximum length : 100",
                        "description": "Name of the mapped query field (field_name__c). For example, name__v or doc_number__v."
                    },
                    "target_object": {
                        "type_data": "Type : Object",
                        "description": "References the Object if the target is an Object."
                    },
                    "target_object_field": {
                        "type_data": "Type : Subcomponent",
                        "description": "Subcomponent reference to the Object field. This is required if the target_object is set."
                    },
                    "target_docfield": {
                        "type_data": "Type : Docfield",
                        "description": "References the Docfield if the target is a Document."
                    },
                    "reference_lookup_type": {
                        "type_data": "Type : Enum\nAllowed values : picklist|object|objectlifecyclestate|documentlifecyclestate|documenttype|generic|lifecyclestate|",
                        "description": "The type of the reference_lookup. lifecyclestate is deprecated as of 19R2.2. Use either objectlifecyclestate or documentlifecyclestate."
                    },
                    "reference_lookup": {
                        "type_data": "Type : String\nMaximum length : 45",
                        "description": "Set field based on a reference lookup from the reference_lookup__sys object."
                    },
                    "field_default": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "Mapping to a static default."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Job": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 1500",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active_after_clone": {
                "type_data": "Type : Boolean",
                "description": "Determines if the job will be set to an active state when the cloned Vault is created. If no value is specified, the default value is false."
            },
            "timezone": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Timezone as used in the TZ variable. For example: America/Los_Angeles. If omitted, the default value is the Vault time zone."
            },
            "trigger_date": {
                "type_data": "Type : Expression\nMaximum length : 4000",
                "description": "(Date Based Object Operation and Date Based Document Operation jobs only) The object record or document\u2019s Date or DateTime field, as of the job\u2019s run date, that Vault evaluates each time the job runs."
            },
            "repeat_on_days": {
                "type_data": "Type : Enum\nAllows multiple values\nAllowed values : Sun|Mon|Tue|Wed|Thu|Fri|Sat|",
                "description": "The day(s) of the week to repeat the job on. For example, 'Mon','Wed','Fri'."
            },
            "month_repeat_type": {
                "type_data": "Type : Enum\nAllowed values : dayOfTheMonth|dayOfTheWeek|",
                "description": "Day of the month or week for a scheduled job."
            },
            "week_day": {
                "type_data": "Type : Enum\nAllowed values : Sun|Mon|Tue|Wed|Thu|Fri|Sat|",
                "description": "Day of the week."
            },
            "hourly_interval": {
                "type_data": "Type : Number\nMaximum value : 12\nMinimum value : 1",
                "description": "For jobs where schedule is set to hourly, the number of hours to wait before repeating the job. Allowed values are 1, 2, 3, 4, 6, 12."
            },
            "schedule": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "The frequency of a scheduled job. Options: Manual| Once| Hourly| Daily| Weekly| Monthly|"
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the component is active."
            },
            "priority": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Indicates job priority. For example, normal"
            },
            "type": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Indicates job type. For example: Task Reminder Notification| Date Based Document Operation|"
            },
            "owner": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "The group or user that owns the report job."
            },
            "time": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "The scheduled time of the report job. Format = hour:min| hour: 24 hour clock| min: 00-60| For example, 22:30."
            },
            "day_of_month": {
                "type_data": "Type : Number\nMaximum value : 31",
                "description": "Specify the day of the month for a monthly report."
            },
            "week_number": {
                "type_data": "Type : Number\nMaximum value : 5",
                "description": "Week number for a monthly report that runs on a \u201cday of the week.\u201d"
            }
        },
        "subcomponents": {
            "Sendnotificationjobaction": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "primary_action": {
                        "type_data": "Type : Boolean",
                        "description": "The primary operation that the job completes. Always set to true."
                    },
                    "related_doc_conditions": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "The set of conditions that must be met for the job to execute on any related documents."
                    },
                    "trigger_date_target": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "Defines the date field to be evaluated against the trigger date."
                    },
                    "relationship_types": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "Defines which document relationship type to run the primary action on."
                    },
                    "conditions": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "The set of conditions that must be met for the job to execute on any records."
                    },
                    "notify_on_status_condition": {
                        "type_data": "Type : Boolean",
                        "description": "Always set to true."
                    },
                    "recipients": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "Defines the notification recipients based on a list of roles on the affected records."
                    },
                    "template": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "Defines the notification template to be used when sending a notification as a result of the job."
                    }
                },
                "subcomponents": {}
            },
            "Changeobjectstatejobaction": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "primary_action": {
                        "type_data": "Type : Boolean",
                        "description": "The primary operation that the job completes. Always set to true."
                    },
                    "conditions": {
                        "type_data": "Type : String\nRequired\nAllows multiple values\nMaximum length : 1500",
                        "description": "The set of conditions that must be met for the job to execute on any records."
                    },
                    "object": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "Defines the Vault Object the job will run on. Only records in this Object can be affected."
                    },
                    "terminate_existing_workflows": {
                        "type_data": "Type : Boolean\nRequired",
                        "description": "Indicates whether to cancel existing workflows to perform action."
                    },
                    "destination_state": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "Defines the lifecycle state to set."
                    }
                },
                "subcomponents": {}
            },
            "Noopjobaction": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "primary_action": {
                        "type_data": "Type : Boolean",
                        "description": "The primary operation that the job completes. Always set to true."
                    },
                    "related_doc_conditions": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "The set of conditions that must be met for the job to execute on any related documents."
                    },
                    "trigger_date_target": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "Defines the date field to be evaluated against the trigger date."
                    },
                    "relationship_types": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "Defines which document relationship type to run the primary action on."
                    },
                    "conditions": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "The set of conditions that must be met for the job to execute on any records."
                    },
                    "notify_on_status_condition": {
                        "type_data": "Type : Boolean",
                        "description": "Always set to true."
                    },
                    "recipients": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "Defines the notification recipients based on a list of roles on the affected records."
                    },
                    "template": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "Defines the notification template to be used when sending a notification as a result of the job."
                    }
                },
                "subcomponents": {}
            },
            "Objectnoopjobaction": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "primary_action": {
                        "type_data": "Type : Boolean",
                        "description": "The primary operation that the job completes. Always set to true."
                    },
                    "conditions": {
                        "type_data": "Type : String\nRequired\nAllows multiple values\nMaximum length : 1500",
                        "description": "The set of conditions that must be met for the job to execute on any records."
                    },
                    "object": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "Defines the Vault Object the job will run on. Only records in this Object can be affected."
                    }
                },
                "subcomponents": {}
            },
            "Httppostjobaction": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "primary_action": {
                        "type_data": "Type : Boolean",
                        "description": "The primary operation that the job completes. Always set to true."
                    },
                    "post_session_creds": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether to post session credentials via form data with key \u201cSession.id\u201d."
                    },
                    "run_as_user": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "Defines the user account the Vault uses to complete an external URL call job."
                    },
                    "external_url": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "Defines (as a link) what URL is accessed when the job executes the External URL Call job action."
                    },
                    "session_granted_by": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "Defines which user to \u201cRun as\u201d."
                    }
                },
                "subcomponents": {}
            },
            "Sdkbatchjobaction": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "primary_action": {
                        "type_data": "Type : Boolean",
                        "description": "The primary operation that the job completes. Always set to true."
                    },
                    "job_metadata": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "Reference to the Jobmetadata component of the job to be run."
                    }
                },
                "subcomponents": {}
            },
            "Edlmatchjobaction": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "primary_action": {
                        "type_data": "Type : Boolean",
                        "description": "The primary operation that the job completes. Always set to true."
                    },
                    "conditions": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "The set of conditions that must be met for the job to execute on any records."
                    }
                },
                "subcomponents": {}
            },
            "Flashreportjobaction": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "primary_action": {
                        "type_data": "Type : Boolean",
                        "description": "The primary operation that the job completes. Always set to true."
                    },
                    "report_name": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "Defines the name of the report."
                    },
                    "send_notifications_on_completion": {
                        "type_data": "Type : Boolean",
                        "description": "Always set to true."
                    },
                    "only_send_notifications_if_result": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether to send a notification when no results are returned."
                    },
                    "send_notifications_to_group_by_users": {
                        "type_data": "Type : Boolean",
                        "description": "If true for flash reports grouped by user fields, Vault distributes reports to the users in report resuts. Users only see the report results associated with them."
                    },
                    "enable_flash_refresh": {
                        "type_data": "Type : Boolean",
                        "description": "If true, a flash report may be refreshed by users."
                    },
                    "send_standard_email_to_shared_users": {
                        "type_data": "Type : Boolean",
                        "description": ""
                    },
                    "custom_flash_email": {
                        "type_data": "Type : Boolean",
                        "description": "If true, allows you to customize the email using the values of custom_flash_email_subject and custom_flash_email_body."
                    },
                    "custom_flash_email_subject": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "The subject for the custom notification email when custom_flash_email is true."
                    },
                    "custom_flash_email_body": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "The body for the custom notification email when custom_flash_email is true."
                    },
                    "include_report_in_email": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether to include a copy of the report in the notification."
                    },
                    "collapse_groups": {
                        "type_data": "Type : Boolean",
                        "description": "If true, a flash report will expose only group level information in emails."
                    }
                },
                "subcomponents": {}
            },
            "Scheduleddataexportjobaction": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "primary_action": {
                        "type_data": "Type : Boolean",
                        "description": "The primary operation that the job completes. Always set to true."
                    },
                    "selected_entities": {
                        "type_data": "Type : LongString\nRequired\nMaximum length : 32000",
                        "description": "A comma-separated list of all selected entities to export."
                    },
                    "data_storage_option": {
                        "type_data": "Type : Enum\nRequired\nAllowed values : VAULT_FILE_STAGING|CUSTOM_S3_BUCKET|",
                        "description": "If set to VAULT_FILE_STAGING, the email or in-app notification when the job is complete includes a link to download exported files from the staging server. If set to CUSTOM_S3_BUCKET, Vault sends the exported files to an external storage service."
                    },
                    "enable_full_data_export": {
                        "type_data": "Type : Boolean\nRequired",
                        "description": "If set to true, enables full data export option and the job exports all data for the selected entities. You can only enable the full data export option once every 30 days. After executing as true, the system sets this parameter back to false. The default value is false."
                    }
                },
                "subcomponents": {}
            },
            "Documentperiodicreviewjobaction": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "primary_action": {
                        "type_data": "Type : Boolean",
                        "description": "The primary operation that the job completes. Always set to true."
                    },
                    "conditions": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "The set of conditions that must be met for the job to execute on any records."
                    }
                },
                "subcomponents": {}
            },
            "Sendobjectnotificationjobaction": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "primary_action": {
                        "type_data": "Type : Boolean",
                        "description": "The primary operation that the job completes. Always set to true."
                    },
                    "conditions": {
                        "type_data": "Type : String\nRequired\nAllows multiple values\nMaximum length : 1500",
                        "description": "The set of conditions that must be met for the job to execute on any records."
                    },
                    "object": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "Defines the Vault Object the job will run on. Only records in this Object can be affected."
                    },
                    "recipients": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "Defines the notification recipients based on a list of roles on the affected records."
                    },
                    "template": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "Defines the notification template to be used when sending a notification as a result of the job."
                    }
                },
                "subcomponents": {}
            },
            "Changestatejobaction": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "primary_action": {
                        "type_data": "Type : Boolean",
                        "description": "The primary operation that the job completes. Always set to true."
                    },
                    "related_doc_conditions": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "The set of conditions that must be met for the job to execute on any related documents."
                    },
                    "trigger_date_target": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "Defines the date field to be evaluated against the trigger date."
                    },
                    "relationship_types": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "Defines which document relationship type to run the primary action on."
                    },
                    "conditions": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "The set of conditions that must be met for the job to execute on any records."
                    },
                    "notify_on_status_condition": {
                        "type_data": "Type : Boolean",
                        "description": "Always set to true."
                    },
                    "document_version": {
                        "type_data": "Type : Enum\nAllowed values : absolute_latest|latest_steady_state|",
                        "description": "Determines which document version the job will run on."
                    },
                    "terminate_existing_workflows": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether to cancel existing workflows to perform action."
                    },
                    "override_checkout_state_change": {
                        "type_data": "Type : Boolean",
                        "description": "If true, allow the state change action to proceed even when a minor version of the document is checked out. Only available when the configured Current State is the lifecyle\u2019s configured steady state type and the destination_state is the lifecycle\u2019s configured obsolete state type."
                    },
                    "destination_state": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "Defines the lifecycle state to set."
                    }
                },
                "subcomponents": {}
            },
            "Schedulededcjobaction": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "primary_action": {
                        "type_data": "Type : Boolean",
                        "description": "The primary operation that the job completes. Always set to true."
                    },
                    "edcAsyncPayload": {
                        "type_data": "Type : JSONString\nMaximum length : 32000",
                        "description": "For internal Veeva use only."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Jobmetadata": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the field is active."
            },
            "chunk_size": {
                "type_data": "Type : Number\nMaximum value : 500\nMinimum value : 1",
                "description": "Defines the number of Job items to be processed in each task."
            },
            "single_instance_states": {
                "type_data": "Type : Enum\nAllows multiple values\nAllowed values : scheduled|queued|running|",
                "description": "Defines a state or states as single instance. Only one instance of a job is allowed to be in a single instance state at any given time."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Description of the job which displays in the UI."
            },
            "job_code": {
                "type_data": "Type : ComponentReference\nRequired",
                "description": "References the fully qualified class name of an Sdkjob component."
            },
            "queue": {
                "type_data": "Type : ComponentReference",
                "description": "The queue the job will place messages into. Custom jobs cannot reference standard queues."
            }
        },
        "subcomponents": {}
    },
    "Layoutprofile": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "A description of the layout profile."
            }
        },
        "subcomponents": {
            "Objectlayout": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "record_creation_layout": {
                        "type_data": "Type : Pagelayout",
                        "description": "The Pagelayout users see when creating an object record."
                    },
                    "objecttype": {
                        "type_data": "Type : Objecttype",
                        "description": "If applicable, the object type to which the layout applies."
                    },
                    "object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The Vault object to which the layout applies."
                    },
                    "pagelayouts": {
                        "type_data": "Type : Pagelayout\nRequired\nAllows multiple values\nOrdered : True",
                        "description": "The Pagelayouts available to users when viewing an object record."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Layoutrule": {
        "attributes": {
            "hide_layout": {
                "type_data": "Type : Boolean",
                "description": "If set to true, Vault hides this layout when the layout rule evaluates to true."
            },
            "focus_on_layout": {
                "type_data": "Type : Boolean",
                "description": "If set to true, Vault displays this layout when the layout rule evaluates to true."
            },
            "hide_fields": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "Indicates the fields to hide in the layout rule."
            },
            "hide_sections": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "Indicates the sections to hide in the layout rule."
            },
            "hidden_pages": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "Lists the pages Vault will hide when the layout rule evaluates to true."
            },
            "displayed_as_required_fields": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "Lists the fields Vault will display as required (with yellow background color and \u201c*\u201d) when the layout rule evaluates to true."
            },
            "displayed_as_readonly_fields": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "Lists the fields Vault will display as read-only when the layout rule evaluates to true."
            },
            "hide_controls": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "Indicates the custom control to hide in the layout rule."
            },
            "expression": {
                "type_data": "Type : String\nRequired\nMaximum length : 3900",
                "description": "A valid expression."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the component is active."
            },
            "order": {
                "type_data": "Type : Number",
                "description": "The relative order of the layout rules on the Layout Rules list page."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "A general description of the Layout Rule."
            },
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "UI-friendly string in the Vault\u2019s base language."
            }
        },
        "subcomponents": {}
    },
    "Lifecyclestatetype": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "document_lifecycle": {
                "type_data": "Type : Doclifecycle",
                "description": "The document lifecycle the state type belongs to. Not currently supported."
            },
            "label_message_key": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": ""
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "Text description of the state type and how it is used."
            },
            "state_required": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether a lifecycle must have a lifecycle state associated with the state type."
            },
            "lifecycle_scope": {
                "type_data": "Type : Enum\nRequired\nAllowed values : AppliesToAll|AvailableToAll|Specific|",
                "description": "Determines whether the state type applies to all lifecycles, is available to all lifecycles (but not required for all lifecycles), or is relevant to only a specific lifecycle."
            },
            "object_lifecycle": {
                "type_data": "Type : Objectlifecycle",
                "description": "The object lifecycle the state type belongs to."
            },
            "lifecycle_type": {
                "type_data": "Type : Enum\nRequired\nAllowed values : Document|Object|",
                "description": "Indicates whether the state type is supporting document or object lifecycles. Only object lifecycles are currently supported."
            }
        },
        "subcomponents": {}
    },
    "Lifecyclestatetypeassociation": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "document_lifecycle": {
                "type_data": "Type : Doclifecycle",
                "description": "The document lifecycle the state type belongs to. Not currently supported."
            },
            "state_type": {
                "type_data": "Type : ComponentReference\nRequired",
                "description": "The state type that is joined to the object lifecycle state."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "Text description of the state type and lifecycle state association. It is not exposed in the user interface."
            },
            "object_lifecycle_state": {
                "type_data": "Type : Subcomponent",
                "description": "The object lifecycle state that is joined to the state type."
            },
            "document_lifecycle_state": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Describes the document lifecycle state being joined to the state type. Not currently supported."
            },
            "object_lifecycle": {
                "type_data": "Type : Objectlifecycle",
                "description": "The object lifecycle that the state type and object lifecycle state belong to."
            }
        },
        "subcomponents": {}
    },
    "Link": {
        "attributes": {
            "send_session_via_post_message": {
                "type_data": "Type : Boolean",
                "description": "Specifies the option to send post session credentials via post message instead of through the URL."
            },
            "url": {
                "type_data": "Type : String\nRequired\nMaximum length : 2083",
                "description": "Defines the URL link for the web action."
            },
            "component": {
                "type_data": "Type : Enum\nRequired\nAllowed values : Document|Object|",
                "description": "Specifies whether the action applies to documents or objects records."
            },
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "target": {
                "type_data": "Type : Enum\nRequired\nAllowed values : self|blank|",
                "description": "Controls where the target URL displays when a user executes the web action."
            }
        },
        "subcomponents": {}
    },
    "Matchingrule": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 100",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the field is active."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "General description of the matching rule."
            },
            "object": {
                "type_data": "Type : Object\nRequired",
                "description": "The object the rule applies to."
            },
            "role": {
                "type_data": "Type : String\nRequired\nMaximum length : 60",
                "description": "The role the rule applies to."
            },
            "user_role_fields": {
                "type_data": "Type : String\nRequired\nAllows multiple values\nMaximum length : 56\nOrdered : True",
                "description": "A list of User Role Object Fields used to identify matching rows."
            },
            "data_fields": {
                "type_data": "Type : String\nRequired\nAllows multiple values\nMaximum length : 56\nOrdered : True",
                "description": "A list of Object or Document Fields used to identify matching rows."
            }
        },
        "subcomponents": {}
    },
    "Messagedeliveryeventhandler": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "checksum": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Used to check data for errors."
            },
            "source_code": {
                "type_data": "Type : SdkCode\nMaximum length : 1048576",
                "description": "The source of this Spark message delivery event handler and code used to create and edit metadata.\nCustom means this handler was developed with the Vault Java SDK."
            }
        },
        "subcomponents": {}
    },
    "Messagegroup": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the field is active."
            }
        },
        "subcomponents": {
            "Message": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the field is active."
                    },
                    "default_value": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "The default translation value for this message."
                    },
                    "system_managed": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether users can overwrite translation values for this message."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Messageprocessor": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the field is active."
            },
            "checksum": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Used to check data for errors."
            },
            "source_code": {
                "type_data": "Type : SdkCode\nMaximum length : 1048576",
                "description": "The source code of this Spark message processor. Custom means this was developed with the Vault Java SDK."
            }
        },
        "subcomponents": {}
    },
    "Mobileshareactionconfig": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "mobile_share_action": {
                "type_data": "Type : ComponentReference\nRequired",
                "description": "The Mobile Sharing Action to which this configuration applies."
            },
            "allowed_for": {
                "type_data": "Type : Enum\nRequired\nAllowed values : ANYONE|SPECIFIC_GROUPS|",
                "description": "Defines which users can use this mobile share action."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "A description of the mobile share action in the Vault\u2019s base language."
            },
            "allowed_for_groups": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "If allowed_for is set to SPECIFIC_GROUPS, the groups allowed to use this mobile share action."
            }
        },
        "subcomponents": {}
    },
    "Mobiletab": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "icon": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "For internal Veeva use only."
            },
            "minimum_app_version": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "The minimum version of the Vault Mobile app required to support the tab. This attribute is read-only."
            },
            "page": {
                "type_data": "Type : ComponentReference",
                "description": "For internal Veeva use only."
            },
            "mobile_label": {
                "type_data": "Type : String\nMaximum length : 40",
                "description": "UI-friendly string to display in the Vault Mobile app. If omitted, Vault Mobile displays the label."
            },
            "order": {
                "type_data": "Type : Number\nMinimum value : 1",
                "description": "The relative order in which the mobile tab appears in the Vault Mobile navigation bar."
            }
        },
        "subcomponents": {}
    },
    "Notificationtemplate": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the component is active."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "Additional description of the notification template."
            },
            "subject": {
                "type_data": "Type : String\nRequired\nMaximum length : 255",
                "description": "Subject of the email sent to the receipient."
            },
            "notification": {
                "type_data": "Type : String\nRequired\nMaximum length : 1023",
                "description": "The message that appears in Vault\u2019s notification page for the recipient."
            },
            "email_body": {
                "type_data": "Type : String\nRequired",
                "description": "Body of the email sent to the notification recipient."
            },
            "entity_type": {
                "type_data": "Type : Enum\nRequired\nAllowed values : document|object|custom|",
                "description": "Indiciates whether the message is intended for documents or objects."
            },
            "email_preferences": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "The frequency with which Vault sends emails."
            },
            "referenced_component": {
                "type_data": "Type : Object",
                "description": "The specific Object (when entity_type is object)."
            },
            "notification_category": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": ""
            }
        },
        "subcomponents": {}
    },
    "Object": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "label_plural": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "Plural of the label in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the object is active."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "Description of the object in the Vault\u2019s base language."
            },
            "help_content": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "Hover text to display for the (?) icon in Business Admin for this object."
            },
            "in_menu": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the object appears in the Business Admin menu."
            },
            "enable_esignatures": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether eSignatures are enabled on the object."
            },
            "allow_attachments": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the object allows file attachments."
            },
            "audit": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether Vault tracks object record changes in the audit logs."
            },
            "order": {
                "type_data": "Type : Number",
                "description": "Order for the object to display in the Business Admin sidebar."
            },
            "dynamic_security": {
                "type_data": "Type : Boolean",
                "description": "Enables Custom Sharing Rules for the object."
            },
            "system_managed": {
                "type_data": "Type : Boolean",
                "description": "Indicates that records are managed by the system."
            },
            "available_lifecycles": {
                "type_data": "Type : Objectlifecycle",
                "description": "Defines the lifecycle (by name) that manages the object, e.g., Objectlifecycle.general_lifecycle__v."
            },
            "object_class": {
                "type_data": "Type : Enum\nAllowed values : base|component|userrolesetup|legalhold|usertask|esignature|checklist|section|response|responserefdoc|responsedoc|availableanswer|dependency|subchecklist|qualityteammember|lifecyclestagesobject|publicaccesslink|qualityoneteammember|",
                "description": "Classification of the object."
            },
            "allow_types": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the object supports Objecttype."
            },
            "data_store": {
                "type_data": "Type : Enum\nAllowed values : standard|raw|",
                "description": "Indicates the data store for this object, either standard or raw. Once set, this attribute cannot change."
            },
            "user_role_setup_object": {
                "type_data": "Type : Object",
                "description": "Indicates the user role setup object when sharing settings are enabled. Specified as Object.object_name__c."
            },
            "default_obj_type": {
                "type_data": "Type : Objecttype",
                "description": "The default Objecttype. Deprecated - As of 24R1.3, this attribute is stored in the default_type attribute on related Objecttype records. It is accepted in MDL commands, but is not returned during exports."
            },
            "secure_audit_trail": {
                "type_data": "Type : Boolean",
                "description": "If set to true, enables the Secure Audit Trail action for the object."
            },
            "secure_sharing_settings": {
                "type_data": "Type : Boolean",
                "description": "Enables ability to control user access to sharing settings."
            },
            "secure_attachments": {
                "type_data": "Type : Boolean",
                "description": "If set to true, enables Secure Object Record Attachments for object records of this type. Cannot be set to true if allow_attachments is set to false."
            },
            "prevent_record_overwrite": {
                "type_data": "Type : Boolean",
                "description": "If set totrue, enables record-level locking on object records of this type. This prevents users from editing the same record simultaneously and saving over each other\u2019s updates."
            },
            "multi_select": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether a complex join related section is multi-select or not. The default value if not specified is false."
            },
            "triggers_disallowed": {
                "type_data": "Type : Boolean",
                "description": "If true, custom triggers cannot be added to this object. This attribute is read-only."
            },
            "configuration_data": {
                "type_data": "Type : Boolean",
                "description": "If true, object records are copied when creating sandbox Vaults. This attribute is read-only."
            },
            "enable_merges": {
                "type_data": "Type : Boolean",
                "description": "Indicates if this object allows record merges."
            },
            "in_merge": {
                "type_data": "Type : Enum\nAllowed values : main_sys|duplicate_sys|",
                "description": "Indicates if this object record is actively undergoing a record merge, and if the record is the main or duplicate record. If this picklist value is null, the object record is not undergoing a record merge. Only present for objects that have record merges enabled."
            },
            "summary_fields": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "Lists the fields to display in the Summary Info panel. For example, field_1__c,field_2__c. Learn more about configuring the Summary Info panel in Vault Help."
            }
        },
        "subcomponents": {
            "Field": {
                "attributes": {
                    "related_local_currency_field": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "Contains the name of the local currency code field, e.g., local_currency_type (local_currency__sys)."
                    },
                    "show_in_header": {
                        "type_data": "Type : Enum\nAllowed values : left|right|",
                        "description": "If set to left or right, the field is shown as an icon in the left or right of the header. Can only be used on formula fields with a return type of text."
                    },
                    "secure_relationship": {
                        "type_data": "Type : Boolean",
                        "description": "Enables relationship security on a referenced object."
                    },
                    "picklist_dependencies": {
                        "type_data": "Type : String",
                        "description": "Contains comma-delimited list of all dependencies for the controlling picklist. \nFor example, \u2019{\"english__c\": [\u201cunited_kindom__c\u201d, \u201cunited_states__c\u201d]}\u2019"
                    },
                    "show_as_icon": {
                        "type_data": "Type : Boolean",
                        "description": "If true, show_in_header settings are applied. Can only be used on formula fields with a return type of text."
                    },
                    "related_corporate_currency_field": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "Contains the name of the related corporate currency field."
                    },
                    "controlling_picklist": {
                        "type_data": "Type : String\nMaximum length : 50",
                        "description": "The name of the controlling picklist, if any."
                    },
                    "searchable": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the field is searchable. This field is read-only and only applies to lookup fields."
                    },
                    "editable": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the field is editable. This field is read-only."
                    },
                    "encrypted": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the field is encrypted. Learn more about encryption in Vault Help."
                    },
                    "subtype": {
                        "type_data": "Type : Enum\nAllowed values : Currency|Link|Time|Percent|Phone|Email|",
                        "description": "Determines the field subtype, if any. Fields with a subtype have the same Data Type as their type, but have additional standard configuration as well as special behaviors. For example, fields with subtypes may have a standard format_mask."
                    },
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 40",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "type": {
                        "type_data": "Type : Enum\nRequired\nAllowed values : String|Number|Boolean|Date|DateTime|Object|Picklist|ID|users|Component|documents|LongText|RichText|Binary|ObjectReference|ObjectParent|",
                        "description": "Defines the field\u2019s data type."
                    },
                    "active": {
                        "type_data": "Type : Boolean\nRequired",
                        "description": "Indicates whether the object is active."
                    },
                    "required": {
                        "type_data": "Type : Boolean\nRequired",
                        "description": "Indicates whether the user must always enter a value"
                    },
                    "description": {
                        "type_data": "Type : String\nMaximum length : 1000",
                        "description": "A general description of the field that appears in the Admin UI to assist in object configuration and is not visible to users."
                    },
                    "unique": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the field\u2019s value must be unique."
                    },
                    "max_length": {
                        "type_data": "Type : Number\nMaximum value : 32000\nMinimum value : 1",
                        "description": "(String, LongText, and RichText type fields only) Defines the maximum number of characters for the field value."
                    },
                    "max_value": {
                        "type_data": "Type : Number",
                        "description": "(Number type fields only) Defines the maximum numeric value for the field value."
                    },
                    "min_value": {
                        "type_data": "Type : Number",
                        "description": "(Number type fields only) Defines the minimum numeric value for the field value."
                    },
                    "scale": {
                        "type_data": "Type : Number\nMaximum value : 9",
                        "description": "(Number type fields only) Defines the maximum number of decimal places for the field value."
                    },
                    "format_mask": {
                        "type_data": "Type : String\nMaximum length : 3900",
                        "description": "Format masks are custom or standard expressions configured by your Vault Admin to instruct Vault how to display this field to Vault UI users. Learn more about format masks in Vault Help.\nOnly available for: String type fields|Number fields|Lookup fields with a String type field or Number field as the source|Formula fields that return a String or Number value|To retrieve the display value of a field for users, use VQL\u2019s TODISPLAYFORMAT() or the Vault Java SDK RecordDisplayService."
                    },
                    "help_content": {
                        "type_data": "Type : String\nMaximum length : 255",
                        "description": "Hover text to display for the (?) icon in Business Admin for this object."
                    },
                    "list_column": {
                        "type_data": "Type : Boolean\nRequired",
                        "description": "Indicates if the field should display in default object record lists, hovercards, etc."
                    },
                    "order": {
                        "type_data": "Type : Number",
                        "description": "The order in which the field appears by default in hovercards and object record lists."
                    },
                    "multi_value": {
                        "type_data": "Type : Boolean",
                        "description": "(Picklist fields only) Indicates if the field is multi-select."
                    },
                    "object": {
                        "type_data": "Type : String\nMaximum length : 50",
                        "description": "(Object fields only) Defines the related object (by name), e.g., country__v."
                    },
                    "relationship_type": {
                        "type_data": "Type : Enum\nAllowed values : parent|reference|child|reference_inbound|reference_outbound|",
                        "description": "(Object fields only) Indicates the relationship type."
                    },
                    "relationship_outbound_name": {
                        "type_data": "Type : String\nMaximum length : 50",
                        "description": "(Object fields only) Indicates the Outbound Relationship Name, e.g., edl__vr on EDL Item."
                    },
                    "relationship_inbound_name": {
                        "type_data": "Type : String\nMaximum length : 50",
                        "description": "(Object fields only) Indicates the Inbound Relationship Name, e.g., edl_item__vr on EDL."
                    },
                    "relationship_inbound_label": {
                        "type_data": "Type : String\nMaximum length : 40",
                        "description": "(Object fields only) Indicates the Outbound Relationship Label, e.g., EDL on EDL Item."
                    },
                    "controlling_field": {
                        "type_data": "Type : String\nMaximum length : 50",
                        "description": "Controlling field name, if any."
                    },
                    "relationship_deletion": {
                        "type_data": "Type : Enum\nAllowed values : block|cascade|setnull|",
                        "description": "(Object fields only) Defines the Deletion Rules that apply to when users try to delete the referenced or parent object record. Can only be set to cascade if relationship_type is parent."
                    },
                    "relationship_criteria": {
                        "type_data": "Type : Expression\nMaximum length : 4000",
                        "description": "(Object and document fields only) VQL WHERE clause expression which specifies the criteria that a document or object record must meet for the relationship."
                    },
                    "system_managed_name": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates if the [name] value is automatically generated by the system. When true, the field becomes read-only."
                    },
                    "start_number": {
                        "type_data": "Type : Number\nMinimum value : 1",
                        "description": "First sequence number for the system-managed name value."
                    },
                    "value_format": {
                        "type_data": "Type : String\nMaximum length : 500",
                        "description": "Format for the system-managed name value, e.g., VV-{###}."
                    },
                    "component": {
                        "type_data": "Type : String\nMaximum length : 40",
                        "description": "(Component fields only) The Component Type values can refer to."
                    },
                    "relationship_deep_copy": {
                        "type_data": "Type : Boolean",
                        "description": "(Object fields only) Indicates if the child records associated via this field are available for hierarchical copy."
                    },
                    "picklist": {
                        "type_data": "Type : String",
                        "description": "(Picklist fields only) Defines the picklist to use for the field."
                    },
                    "lookup_relationship_name": {
                        "type_data": "Type : String\nMaximum length : 50",
                        "description": "(Lookup fields only) Defines the relationship (by [name]) that a Lookup field uses."
                    },
                    "lookup_source_field": {
                        "type_data": "Type : String\nMaximum length : 50",
                        "description": "(Lookup fields only) Defines the field on the referenced object that should appear as a Lookup field on the current object."
                    },
                    "document_version_reference": {
                        "type_data": "Type : String\nMaximum length : 40",
                        "description": "Indicates which document version the field references. This can be either specific, latest, or latest_steady_state_version."
                    },
                    "related_document_reference_field": {
                        "type_data": "Type : String\nMaximum length : 128",
                        "description": "The name of the related document reference field. For example, study_document__c. Indicates that this field is an Unbound Document Field."
                    },
                    "no_copy": {
                        "type_data": "Type : Boolean",
                        "description": "When true a value will not be set in a copied record. Cannot be true when required is true."
                    },
                    "create_object_inline": {
                        "type_data": "Type : Boolean",
                        "description": "(Object fields only) If set to true, users can create a new reference record within an object reference field."
                    },
                    "sequential_naming": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates the system controls the name be sequential."
                    },
                    "default_value": {
                        "type_data": "Type : String\nMaximum length : 3900",
                        "description": "The default value of the field."
                    },
                    "checkbox": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether \u201cYes/No\u201d field will display as a checkbox."
                    },
                    "formula": {
                        "type_data": "Type : String\nMaximum length : 3900",
                        "description": "The formula expression."
                    },
                    "enhanced_blank_handling": {
                        "type_data": "Type : Enum\nAllowed values : blanks_as_blanks|blanks_as_zeros_and_empty_strings|",
                        "description": "(Formula fields only) Indicates the blank field handling setting for the field. Learn more about Blank Field Handling in Vault Help."
                    },
                    "multi_part_field": {
                        "type_data": "Type : Enum\nAllowed values : suffix|prefix|",
                        "description": "Indicates whether the prefix and suffix of multi-part field is editable."
                    },
                    "multi_part_readonly": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "The read-only text of a multi-part field."
                    },
                    "currency_type": {
                        "type_data": "Type : Enum\nAllowed values : local|corporate|",
                        "description": "(Currency subtype fields only) Indicates whether the currency formula field value should use local or corporate currency. Learn more about currency fields in Vault Help."
                    }
                },
                "subcomponents": {}
            },
            "Index": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "fields": {
                        "type_data": "Type : String\nRequired\nAllows multiple values\nMaximum length : 1500",
                        "description": "The list of fields for this index. Note that Vault cannot index LongText fields, or Text fields longer than 255 characters."
                    },
                    "description": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "A description of this index."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Objectaction": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "General description of the object action."
            },
            "parameters": {
                "type_data": "Type : XMLString\nMaximum length : 32000",
                "description": "Values for any parameters the Action requires."
            },
            "action": {
                "type_data": "Type : Recordaction\nRequired",
                "description": "The Action code to run."
            },
            "available_all_states": {
                "type_data": "Type : Boolean",
                "description": "Indiciates if the Action is available for all lifecycle states."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the component is active."
            }
        },
        "subcomponents": {}
    },
    "Objectlifecycle": {
        "attributes": {
            "state_labels": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 255\nOrdered : True",
                "description": "Lists lifecycle state labels (by name) defined for this lifecycle. The order defined here must correspond to the order in labeled_states. Deprecated - replaced by Lifecyclestatetypeassociation."
            },
            "labeled_states": {
                "type_data": "Type : Objectlifecyclestate\nAllows multiple values\nOrdered : True",
                "description": "Lists \u201cspecial states\u201d (by name). The order of the state in this list dictates which state from state_labels is assigned to the specific special state. Deprecated - replaced by Lifecyclestatetypeassociation."
            },
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the component is active."
            },
            "starting_state": {
                "type_data": "Type : Objectlifecyclestate",
                "description": "The name of the starting state of an object lifecycle."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "Additional information to describe the lifecycle."
            }
        },
        "subcomponents": {
            "Objectlifecyclestate": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 40",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean\nRequired",
                        "description": "Indicates whether the component is active."
                    },
                    "record_inactive": {
                        "type_data": "Type : Boolean",
                        "description": "Deprecated - replaced by record_status"
                    },
                    "record_status": {
                        "type_data": "Type : Enum\nAllowed values : active__v|inactive__v|in_migration__v|archived__v|",
                        "description": "Indicates the status of a record while in this state."
                    },
                    "description": {
                        "type_data": "Type : String\nMaximum length : 255",
                        "description": "Additional information to describe the lifecycle."
                    }
                },
                "subcomponents": {}
            },
            "Objectlifecyclestateentrycriterion": {
                "attributes": {
                    "rule": {
                        "type_data": "Type : XMLString\nRequired\nMaximum length : 32000",
                        "description": "The defined rules and conditions for entry criteria, entry actions, or user actions."
                    },
                    "order": {
                        "type_data": "Type : Number",
                        "description": "The relative order in which the action displays. For example, order 1 will display before order 2."
                    }
                },
                "subcomponents": {}
            },
            "Objectlifecyclestateentryaction": {
                "attributes": {
                    "rule": {
                        "type_data": "Type : XMLString\nRequired\nMaximum length : 32000",
                        "description": "The defined rules and conditions for entry criteria, entry actions, or user actions."
                    },
                    "order": {
                        "type_data": "Type : Number",
                        "description": "The relative order in which the action displays. For example, order 1 will display before order 2."
                    }
                },
                "subcomponents": {}
            },
            "Objectlifecyclestateuseraction": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "rule": {
                        "type_data": "Type : XMLString\nRequired\nMaximum length : 32000",
                        "description": "The defined rules and conditions for entry criteria, entry actions, or user actions."
                    },
                    "order": {
                        "type_data": "Type : Number\nRequired",
                        "description": "The relative order in which the action displays. For example, order 1 will display before order 2."
                    }
                },
                "subcomponents": {}
            },
            "Objectlifecycleevent": {
                "attributes": {
                    "rule": {
                        "type_data": "Type : XMLString\nRequired\nMaximum length : 32000",
                        "description": "The defined rules and conditions for entry criteria, entry actions, or user actions."
                    },
                    "event": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": ""
                    },
                    "order": {
                        "type_data": "Type : Number\nRequired",
                        "description": "The relative order in which the action displays. For example, order 1 will display before order 2."
                    }
                },
                "subcomponents": {}
            },
            "Objectlifecyclerole": {
                "attributes": {
                    "active": {
                        "type_data": "Type : Boolean\nRequired",
                        "description": "Indicates whether the component is active."
                    },
                    "application_role": {
                        "type_data": "Type : String\nRequired\nMaximum length : 60",
                        "description": "The name__v field value of the application_role__v record this role corresponds to. (Prefixed with Applicationrole.)"
                    },
                    "permissions": {
                        "type_data": "Type : Enum\nAllows multiple values\nAllowed values : Read|Edit|Delete|",
                        "description": "List of permissions assigned to the object role. Note that:  Read is always present| Edit is always present if Delete is present|"
                    }
                },
                "subcomponents": {}
            },
            "Objectlifecyclepermission": {
                "attributes": {
                    "states": {
                        "type_data": "Type : Objectlifecyclestate\nRequired\nAllows multiple values\nOrdered : True",
                        "description": "Lists the object lifecycle states in which the permission applies."
                    },
                    "role": {
                        "type_data": "Type : Objectlifecyclerole\nRequired",
                        "description": "The role to which this permission applies."
                    },
                    "permission": {
                        "type_data": "Type : Enum\nRequired\nAllowed values : Read|Edit|Delete|",
                        "description": "The permission to apply."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Objectlifecyclestagegroup": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "object_type": {
                "type_data": "Type : Objecttype\nRequired",
                "description": "The Objecttype of the Lifecycle Stage Group. If an object type is not enabled, the object type will be BASE by default."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "General description for this object lifecycle stage group."
            },
            "object_lifecycle": {
                "type_data": "Type : Objectlifecycle\nRequired",
                "description": "Reference to Objectlifecycle component type. Validation ensures that only one Objectstagegroup exists per Objectlifecycle.Objecttype."
            }
        },
        "subcomponents": {
            "Objectlifecyclestage": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "object_lifecycle_states_ref": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "Reference to the Objectlifecyclestate. Validation ensures that a Objectlifecyclestate only exists in one object stage."
                    },
                    "description": {
                        "type_data": "Type : String\nMaximum length : 255",
                        "description": "General description for this object stage."
                    },
                    "order": {
                        "type_data": "Type : Number\nRequired\nMinimum value : 1",
                        "description": "A number automatically assigned to a stage after it\u2019s created and represents the order of stages in a stage group."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Objecttype": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "label_plural": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "Plural of the label in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the object type is active."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 1000",
                "description": "A description of the object type that appears in the Admin UI to assist in object type configuration and is not visible to users."
            },
            "additional_type_validations": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "Contains a list of all validation rules for the specified object type."
            },
            "default_type": {
                "type_data": "Type : Boolean",
                "description": "If true, this is the default object type. Only one object type per object can be set to true. If no value is specified, the default value is false."
            },
            "summary_fields": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "Lists the fields to display in the Summary Info panel. For example, field_1__c,field_2__c. Learn more about configuring the Summary Info panel in Vault Help."
            }
        },
        "subcomponents": {
            "Typefield": {
                "attributes": {
                    "source": {
                        "type_data": "Type : Enum\nRequired\nAllowed values : standard|sample|custom|application|system|",
                        "description": "The owner of the type. e.g. standard indicates owned by Vault."
                    },
                    "required": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the user must always enter a value"
                    },
                    "relationship_criteria": {
                        "type_data": "Type : Expression\nMaximum length : 4000",
                        "description": "The VQL used to constrain records in the referenced Object."
                    },
                    "pickentries": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "The picklist values allowed for this field when the record is of this type. (Only valid for Fields of type Picklist)"
                    },
                    "default_value": {
                        "type_data": "Type : String\nMaximum length : 3900",
                        "description": "The type specific default expression for the field."
                    }
                },
                "subcomponents": {}
            },
            "Typeaction": {
                "attributes": {
                    "action": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "The Objectaction allowed."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Objectvalidation": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the validation is active."
            },
            "expression": {
                "type_data": "Type : String\nRequired\nMaximum length : 3900",
                "description": "A valid expression."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "Describes the details of the validation rule."
            },
            "error_message": {
                "type_data": "Type : String\nRequired\nMaximum length : 255",
                "description": "Describes the error that displays if the rule fails."
            },
            "error_location": {
                "type_data": "Type : String\nRequired\nAllows multiple values\nMaximum length : 255",
                "description": "Select fields for the error location."
            }
        },
        "subcomponents": {}
    },
    "Objectworkflow": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the component is active."
            },
            "object_lifecycles": {
                "type_data": "Type : Objectlifecycle\nRequired\nAllows multiple values",
                "description": "The Objectlifecycle to which this workflow belongs. The Objectlifecycle must be associated with an Object."
            },
            "document_content_lifecycle": {
                "type_data": "Type : Doclifecycle",
                "description": "For document workflows only, the Doclifecycle to which this workflow belongs. Must be empty for all other workflow types."
            },
            "record_content_lifecycle": {
                "type_data": "Type : Objectlifecycle",
                "description": "For object workflows only, the Objectlifecycle to which this workflow belongs. Must be empty for all other workflow types."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "Description of the workflow."
            },
            "auto_start": {
                "type_data": "Type : Boolean",
                "description": ""
            },
            "envelope_name_format": {
                "type_data": "Type : String\nMaximum length : 128",
                "description": "The format used to auto-number envelope workflows in Vaults where auto-numbering is configured."
            },
            "cancellation_comment": {
                "type_data": "Type : Boolean",
                "description": ""
            },
            "workflow_variables": {
                "type_data": "Type : XMLString\nMaximum length : 32000",
                "description": "Admin-defined variables which workflow initiators can select at the start of a workflow."
            },
            "workflow_content_type": {
                "type_data": "Type : Enum\nAllowed values : Document|Object|",
                "description": "Indicates the type, objects or documents, of the workflow\u2019s contents."
            },
            "users_can_only_complete_one_task": {
                "type_data": "Type : Boolean",
                "description": "Indicates if users can complete more than one task in this workflow. If true, users can only complete one task in this workflow. If false, users can complete multiple tasks in this workflow. Defaults to false."
            },
            "roles_cannot_complete_task": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "If this workflow is configured to exclude specific roles from participating, this field indicates the role names which are not allowed to participate."
            },
            "class": {
                "type_data": "Type : Enum\nAllowed values : ReadAndUnderstood|",
                "description": "Indicates the classification of the workflow."
            },
            "cardinality": {
                "type_data": "Type : Enum\nAllowed values : One|OneOrMany|",
                "description": "Indicates how many contents can be included in a workflow."
            },
            "show_fields": {
                "type_data": "Type : Boolean",
                "description": "For ReadAndUnderstood workflows created in v21.2+, if set to false, document fields are hidden and cannot be updated while the workflow is in progress. If the value is true or null, document fields are shown as usual. For workflows created in v21.1 and lower, or if class is not ReadAndUnderstood, this must be blank."
            },
            "bound_create_draft": {
                "type_data": "Type : Boolean",
                "description": "For document workflows only, if set to true, the Create Draft action increments the document\u2019s minor version while the active workflow remains on the previous major document version. The default value for document workflows is false. Must be empty or null for object and R&U workflows."
            }
        },
        "subcomponents": {
            "Objectworkflowstep": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 40",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "type": {
                        "type_data": "Type : Enum\nRequired\nAllowed values : start|end|usertask|contenttask|notification|placeholder|changestate|decision|join|action|updaterecordfield|updatesharingsettings|updatedocumentsharingsettings|updaterelatedrecordfield|contentaction|",
                        "description": "The type of step."
                    },
                    "next_steps": {
                        "type_data": "Type : Objectworkflowstep\nAllows multiple values",
                        "description": "The Objectworkflowstep to move to once this step is complete."
                    },
                    "tags": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 40",
                        "description": ""
                    },
                    "step_detail": {
                        "type_data": "Type : XMLString\nMaximum length : 128000",
                        "description": "Details of the step configuration."
                    },
                    "description": {
                        "type_data": "Type : String\nMaximum length : 255",
                        "description": "Description of the workflow."
                    }
                },
                "subcomponents": {}
            },
            "WorkflowCancelationAction": {
                "attributes": {
                    "rule": {
                        "type_data": "Type : XMLString\nRequired\nMaximum length : 32000",
                        "description": "An XML String describing the workflow cancellation action rule."
                    },
                    "order": {
                        "type_data": "Type : Number\nRequired",
                        "description": "The order in which the cancellation action is executed."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Outboundemaildomain": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "dns_records": {
                "type_data": "Type : LongString\nMaximum length : 32000",
                "description": "Stores the DNS records for the sender domain in JSON format. This attribute is read-only."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "A description of the outbound email domain."
            },
            "verification_status": {
                "type_data": "Type : Enum\nAllowed values : UNVERIFIED|VERIFIED|ERROR|",
                "description": "Indicates the status of the sender domain. This attribute is read-only."
            },
            "sender_domain": {
                "type_data": "Type : String\nRequired\nMaximum length : 255",
                "description": "The full sender domain in the format {subdomain}.{root_domain}. for subdomains, or {root_domain}. for root domains."
            }
        },
        "subcomponents": {}
    },
    "Overlaytemplate": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "watermark": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Diagnal watermark that appears across the center of the downloaded rendition."
            },
            "allow_download_without_overlay": {
                "type_data": "Type : Boolean",
                "description": "If set to true, identifies an overlay template as optional and allows users to download a viewable rendition if Vault fails to apply an overlay."
            },
            "overlay_override_page_match": {
                "type_data": "Type : Boolean",
                "description": "If set to true, Vault applies overlays to documents within 0.5\u201d of the specified height or width of the overlay. If no matching overlay template overrides within the 0.5\u201d page tolerance are found, Vault applies the standard overlay template."
            },
            "footer_01": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Footer row 1"
            },
            "footer_02": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Footer row 2"
            },
            "header_01": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Header row 1"
            },
            "header_02": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Header row 2"
            }
        },
        "subcomponents": {
            "Overlayoverride": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "file": {
                        "type_data": "Type : File\nRequired",
                        "description": "Reference to the file"
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Pagelayout": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 100",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "default_layout": {
                "type_data": "Type : Boolean",
                "description": "If true, this layout is assigned to all users unless another layout is specified in their assigned layout profile."
            },
            "page_markup": {
                "type_data": "Type : XMLString\nRequired\nMaximum length : 64000",
                "description": "Defines page layout using XML."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "A description of the layout."
            },
            "display_lifecycle_stages": {
                "type_data": "Type : Boolean",
                "description": "For objects with lifecycle stages configured, if true, Vault displays the Lifecycle Stages Chevron panel on all views for the object."
            }
        },
        "subcomponents": {}
    },
    "Pagelink": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "A general description of the page link."
            },
            "url": {
                "type_data": "Type : String\nRequired\nMaximum length : 1500",
                "description": "Defines the URL link for the page link."
            },
            "mode": {
                "type_data": "Type : Enum\nRequired\nAllowed values : Create|Edit|Copy|View|",
                "description": "Determines which action redirects the user to a custom page."
            },
            "page_type": {
                "type_data": "Type : Enum\nRequired\nAllowed values : Object|",
                "description": "Specifies the type of page link. Object is the only allowed value at this time."
            },
            "object": {
                "type_data": "Type : Object",
                "description": "Sepcifies the object that the page link will override behavior for."
            },
            "page": {
                "type_data": "Type : Page",
                "description": "For internal Veeva use only."
            }
        },
        "subcomponents": {}
    },
    "Permissionset": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            }
        },
        "subcomponents": {}
    },
    "Picklist": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the component is active."
            },
            "can_add_values": {
                "type_data": "Type : Boolean",
                "description": "(Read Only) If true, Picklistentry values can be added to the picklist."
            },
            "can_reorder_values": {
                "type_data": "Type : Boolean",
                "description": "(Read Only) If true, Picklistentry values can be reordered."
            }
        },
        "subcomponents": {
            "Picklistentry": {
                "attributes": {
                    "value": {
                        "type_data": "Type : String\nRequired\nMaximum length : 256",
                        "description": "UI-friendly string for the value of the entry (in the Vault\u2019s base language)."
                    },
                    "order": {
                        "type_data": "Type : Number\nRequired",
                        "description": "Defines the ordinal position of the entry in the picklist."
                    },
                    "active": {
                        "type_data": "Type : Boolean\nRequired",
                        "description": "Indicates whether the component is active."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Printableviewtestscript": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the Printable View is active."
            },
            "template": {
                "type_data": "Type : File\nRequired",
                "description": "The XML template file that defines the configuration for the Printable View."
            },
            "header_logo": {
                "type_data": "Type : File",
                "description": "The uploaded image displayed on the Printable View."
            }
        },
        "subcomponents": {}
    },
    "Qmsactionpathconfiguration": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "parent_object": {
                "type_data": "Type : Object\nRequired",
                "description": "The parent object, either change_plan__v or change_control__v."
            },
            "parent_locked_states": {
                "type_data": "Type : Subcomponent\nAllows multiple values",
                "description": "Lists one or more object lifecycle states. If the parent object is in one of these states, it cannot be moved by a change action."
            },
            "parent_object_type": {
                "type_data": "Type : Objecttype\nRequired",
                "description": "The parent object type, for example, change_plan__v."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "A general description of the Action Path Configuration."
            },
            "parent_object_lifecycle": {
                "type_data": "Type : Objectlifecycle\nRequired",
                "description": "The parent object lifecycle, for example, change_plan_lifecycle__v."
            },
            "action_object": {
                "type_data": "Type : Object\nRequired",
                "description": "The Action object used by this path. Records of this object will be created and managed when a Change Action Path is instantiated. In 24R2, the only supported value is change_action__qdm."
            }
        },
        "subcomponents": {
            "Qmsactionstepconfiguration": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "parent_start_state": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "When a change control enters this state, its associated change actions will be moved to the action_start_state."
                    },
                    "action_start_state": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The state that the change action moves into when the parent record enters the parent_start_state."
                    },
                    "included_action_states": {
                        "type_data": "Type : Subcomponent\nRequired\nAllows multiple values",
                        "description": "Change actions must be in these states when the parent record enters the parent_start_stateto be moved. Actions in other states are skipped."
                    },
                    "parent_finish_state": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The state that the parent record enters when all actions are complete."
                    },
                    "action_object_lifecycle": {
                        "type_data": "Type : Objectlifecycle\nRequired",
                        "description": "The lifecycle for the action, for example,change_action_lifecycle__c."
                    },
                    "action_finish_states": {
                        "type_data": "Type : Subcomponent\nRequired\nAllows multiple values",
                        "description": "Once all actions in the action group reach this step, the parent change control will move to the parent_finish_state."
                    },
                    "parent_object_lifecycle": {
                        "type_data": "Type : Objectlifecycle\nRequired",
                        "description": "The parent object lifecycle, for example, change_control_lifecycle__v."
                    },
                    "order": {
                        "type_data": "Type : Number\nRequired\nMaximum value : 10\nMinimum value : 1",
                        "description": "The order in which the step executes."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Qmsautomationusertemplate": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active. If the component or subcomponent is inactive, no one in the Vault can edit team membership using this team or Team Role."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 500",
                "description": "UI-friendly description of the intended use of this automation template for Vault Admins."
            },
            "username_pattern": {
                "type_data": "Type : String\nRequired\nMaximum length : 1500",
                "description": "Tokenized pattern used to generate a username from the attributes of a Person & their Organization."
            },
            "security_profile": {
                "type_data": "Type : Securityprofile\nRequired",
                "description": "Defines the Security Profile to use when creating a user with this template."
            }
        },
        "subcomponents": {}
    },
    "Qualityexternalnotification": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "target_object_type": {
                "type_data": "Type : Objecttype\nRequired",
                "description": "If object types are configured on the target object, the object type for the notification."
            },
            "target_object": {
                "type_data": "Type : Object\nRequired",
                "description": "The Object for the notification. For example, complaint__v."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "A general description of the notification."
            },
            "do_not_include_header_footer": {
                "type_data": "Type : Boolean\nRequired",
                "description": "If true, the standard Vault header and footer are excluded from notifications. Only available when the target object is complaint__v or mt_complaint__v."
            }
        },
        "subcomponents": {
            "Qualitydistributiongroup": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "maximum_recipients": {
                        "type_data": "Type : Number\nRequired\nMaximum value : 10\nMinimum value : 1",
                        "description": "The maximum number of recipients for the group. This can be any number from 1-50."
                    },
                    "help_content": {
                        "type_data": "Type : String\nMaximum length : 255",
                        "description": "UI-friendly help string."
                    },
                    "minimum_recipients": {
                        "type_data": "Type : Number\nRequired\nMaximum value : 10",
                        "description": "The minimum number of recipients for the group. This can be any number from 1-50."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Qualityexternalnotificationtemplate": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "recipient_roles": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 255",
                "description": "Specifies one or more application roles to receive notifications."
            },
            "download_option": {
                "type_data": "Type : Enum\nAllowed values : SOURCE|PDF|BOTH|NONE|",
                "description": "Indicates the document rendition type(s) a recipient can download. If set to NONE, recipients cannot download the document."
            },
            "help_content": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "UI-friendly help string."
            },
            "target_object": {
                "type_data": "Type : Object\nRequired",
                "description": "The object associated with the Quality External Notification."
            },
            "notification_template": {
                "type_data": "Type : Notificationtemplate\nRequired",
                "description": "The Notificationtemplate configured for this Quality External Notification."
            },
            "document_link_field": {
                "type_data": "Type : Subcomponent",
                "description": "The text field on the supported object to contain the document package URL."
            },
            "object_fields_on_document": {
                "type_data": "Type : Docfield\nAllows multiple values",
                "description": "The document field referencing the target object."
            },
            "can_add_or_remove_documents": {
                "type_data": "Type : Boolean",
                "description": "If true, users can add or remove documents from the notification before sending."
            },
            "expiry_period": {
                "type_data": "Type : Number\nMaximum value : 100000\nMinimum value : 1",
                "description": "The number of days the document package URL will remain available."
            },
            "recipients": {
                "type_data": "Type : Subcomponent\nAllows multiple values",
                "description": "Specifies the Person object reference field(s) to receive notifications."
            },
            "recipient": {
                "type_data": "Type : Subcomponent",
                "description": "Specifies a single Person object reference field to receive notifications."
            },
            "document_reference_fields": {
                "type_data": "Type : Subcomponent\nAllows multiple values",
                "description": "One or more document reference fields on the supported object. Vault includes all referenced documents in the document package."
            },
            "can_add_or_remove_participants": {
                "type_data": "Type : Boolean\nRequired",
                "description": "If true, users can edit the recipients list for the notification before sending."
            },
            "quality_external_notification": {
                "type_data": "Type : ComponentReference\nRequired",
                "description": "The associated Qualityexternalnotification."
            }
        },
        "subcomponents": {
            "Qualityextnotificationtemplatedistgroup": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "quality_distribution_group": {
                        "type_data": "Type : SubcomponentReference\nRequired",
                        "description": "The associated Qualitydistributiongroup."
                    },
                    "quality_external_notification": {
                        "type_data": "Type : ComponentReference\nRequired",
                        "description": "The associated Qualityexternalnotification."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Qualityincidentintakelayout": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "A general description of the layout."
            }
        },
        "subcomponents": {
            "Qualityincidentintakelayoutfield": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "target_object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The object on which the field_to_display appears. For example, Object.quality_incident__v."
                    },
                    "field_to_display": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The Field to display on the intake form. Fields must be active and either standard object reference fields on the Quality Incident object (country__v, organization__v, facility__v, department__v), or one of the following data types: Boolean, text, number, date, or picklist. For example, Field.summary__v."
                    },
                    "order": {
                        "type_data": "Type : Number\nRequired\nMaximum value : 10000\nMinimum value : 1",
                        "description": "The order of the field relative to other fields. Can be any value from 1-10."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Qualityobjectrelationshipconfig": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "right_field": {
                "type_data": "Type : Subcomponent\nRequired",
                "description": "The target field. Must be a Parent Object reference."
            },
            "target_object_type": {
                "type_data": "Type : Objecttype",
                "description": "The object type of the target object."
            },
            "left_field": {
                "type_data": "Type : Subcomponent\nRequired",
                "description": "The source field. Must be a Related Object reference."
            },
            "target_object": {
                "type_data": "Type : Object\nRequired",
                "description": "The object which will be the data store for the bidirectional link."
            },
            "relationship_picklist": {
                "type_data": "Type : Subcomponent\nRequired",
                "description": "The Picklistentry field on the selected object which Vault will set when establishing the bidirectional link."
            }
        },
        "subcomponents": {
            "Qualitypicklistvaluemap": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "inverse_picklist_value": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The mapped Picklistentry value on the linked object."
                    },
                    "relationship_picklist": {
                        "type_data": "Type : Picklist\nRequired",
                        "description": "The Picklist component to be mapped."
                    },
                    "picklist_value": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The mapped Picklistentry value on the current object."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Qualityreasonforchange": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "target_object": {
                "type_data": "Type : Object\nRequired",
                "description": "The object on which the Reason for Change is configured."
            },
            "target_object_type": {
                "type_data": "Type : Objecttype",
                "description": "The Objecttype of the target_object."
            }
        },
        "subcomponents": {
            "Qualityreasonforchangefieldcriteria": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    }
                },
                "subcomponents": {}
            },
            "Qualityreasonforchangecommentcriterion": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "reason_for_change_picklist": {
                        "type_data": "Type : Picklist\nRequired",
                        "description": "Defines the Reason for Change picklist."
                    },
                    "value_requiring_comment": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "Indicates whether a Comment is required for a specific reason_for_change_picklist value."
                    }
                },
                "subcomponents": {}
            },
            "Qualityreasonforchangestate": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "field_criteria": {
                        "type_data": "Type : SubcomponentReference\nRequired",
                        "description": "Reference to Qualityreasonforchangefieldcriteria subcomponent."
                    },
                    "lifecycle_state": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "Indicates the lifecycle state in which Vault should require a Reason for Change for the chosen field."
                    },
                    "object_lifecycle": {
                        "type_data": "Type : Objectlifecycle\nRequired",
                        "description": "The lifecycle of the target_object."
                    },
                    "reason_for_change": {
                        "type_data": "Type : ComponentReference\nRequired",
                        "description": "References the associated Qualityreasonforchange component."
                    }
                },
                "subcomponents": {}
            },
            "Qualityreasonforchangefield": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "field": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The field on which to require a Reason for Change."
                    },
                    "field_criteria": {
                        "type_data": "Type : SubcomponentReference\nRequired",
                        "description": "Reference to Qualityreasonforchangefieldcriteria subcomponent."
                    },
                    "reason_for_change": {
                        "type_data": "Type : ComponentReference\nRequired",
                        "description": "References the associated Qualityreasonforchange component."
                    },
                    "target_object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The object on which the Reason for Change is configured."
                    },
                    "target_object_type": {
                        "type_data": "Type : Objecttype",
                        "description": "The Objecttype of the target_object."
                    },
                    "type_field": {
                        "type_data": "Type : Subcomponent",
                        "description": "The Typefield of the field."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Qualityrecordcheck": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "allow_date_overrides": {
                "type_data": "Type : Boolean",
                "description": "If true, a user can modify the timeframe upon executing a recurrence check."
            },
            "allow_match_field_overrides": {
                "type_data": "Type : Boolean",
                "description": "If true, a user can modify the exact match field values upon executing a recurrence check."
            },
            "check_type": {
                "type_data": "Type : Subcomponent\nRequired",
                "description": "The type of check to be executed."
            },
            "check_type_picklist": {
                "type_data": "Type : Picklist\nRequired",
                "description": "The picklist defining the options available for check_type."
            },
            "date_field": {
                "type_data": "Type : Subcomponent\nRequired",
                "description": "The date field from the target_object from which to base your timeframe."
            },
            "date_quantity": {
                "type_data": "Type : Number\nRequired\nMaximum value : 100\nMinimum value : 1",
                "description": "The number of date units to include in the check. For example, if date_quantity is set to 3 and date_unit_entry is set to weeks__v, the recurrence check will cover 3 weeks."
            },
            "date_unit_entry": {
                "type_data": "Type : Subcomponent\nRequired",
                "description": "The unit of measurement for the date, for example, days__v or years__v."
            },
            "date_unit_picklist": {
                "type_data": "Type : Picklist\nRequired",
                "description": "References the picklist from which users choose the date_unit_entry."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "A description of the Quality Record Check."
            },
            "display_fields": {
                "type_data": "Type : Subcomponent\nRequired\nAllows multiple values",
                "description": "Fields from the target_object to display in the record check interface. These fields are not included in the match calculation."
            },
            "lifecycle_states_to_not_transition": {
                "type_data": "Type : Subcomponent\nAllows multiple values",
                "description": "If populated, target object records in the indicated lifecycle state(s) will not change state when a user performs a record check. As of 24R2.3, this attribute is deprecated and stored in the lifecycle_states_to_not_transition attribute on the Qualityrecordchecklifecycleassociation component. Updates to this attribute for existing components will be unsuccessful."
            },
            "object_lifecycle": {
                "type_data": "Type : Objectlifecycle",
                "description": "The lifecycle of the target_object. As of 24R2.3, this attribute is deprecated and stored in the object_lifecycle attribute on the Qualityrecordchecklifecycleassociation component. Updates to this attribute for existing components will be unsuccessful."
            },
            "object_lifecycle_states": {
                "type_data": "Type : Subcomponent\nAllows multiple values",
                "description": "The lifecycle states from the object_lifecycle to include in the recurrence check. As of 24R2.3, this attribute is deprecated and stored in the lifecycle_states_to_include attribute on the Qualityrecordchecklifecycleassociation component. Updates to this attribute for existing components will be unsuccessful."
            },
            "relationship_type": {
                "type_data": "Type : ComponentReference",
                "description": "The Qualityobjectrelationshipconfig applicable to your recurrence check."
            },
            "relationship_type_entries": {
                "type_data": "Type : Subcomponent\nAllows multiple values",
                "description": "The picklist values to be displayed to the end user. Possible values are based on the picklist specified in the relationship_type_picklist."
            },
            "relationship_type_picklist": {
                "type_data": "Type : Picklist",
                "description": "The picklist defining the options available for relationship_type_entries."
            },
            "search_fields": {
                "type_data": "Type : Subcomponent\nAllows multiple values",
                "description": "The text fields on which to run the recurrence check."
            },
            "simple_match_fields": {
                "type_data": "Type : Subcomponent\nAllows multiple values",
                "description": "The fields on the target_object that must match."
            },
            "target_object": {
                "type_data": "Type : Object\nRequired",
                "description": "The object on which the Quality Record Check is configured."
            },
            "target_object_type": {
                "type_data": "Type : Objecttype\nRequired",
                "description": "The type of the target_object."
            }
        },
        "subcomponents": {
            "Qualitymatchtier": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "relationship_type_required": {
                        "type_data": "Type : Boolean\nRequired",
                        "description": "If set to true, users must provide a relationship type when analyzing each record of the tier."
                    },
                    "tier_label": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The entry from the tier_picklist to display in the UI."
                    },
                    "display": {
                        "type_data": "Type : Boolean\nRequired",
                        "description": "If set to true, Vault displays the tier as a category when a user performs a recurrence check action."
                    },
                    "tier": {
                        "type_data": "Type : Number\nRequired\nMaximum value : 3\nMinimum value : 1",
                        "description": "Determines the order in which the tier appears."
                    },
                    "tier_picklist": {
                        "type_data": "Type : Picklist\nRequired",
                        "description": "Defines the options available for the tier_label."
                    },
                    "justification_required": {
                        "type_data": "Type : Boolean\nRequired",
                        "description": "If set to true, users must define a justification when analyzing each record of a tier."
                    },
                    "similarity_score": {
                        "type_data": "Type : Number\nRequired\nMaximum value : 99",
                        "description": "The % minimum similarity score for a tier."
                    },
                    "tier_color": {
                        "type_data": "Type : String\nRequired\nMaximum length : 500",
                        "description": "The HEX color value in which to display records in this tier."
                    }
                },
                "subcomponents": {}
            },
            "Qualityrelatedrecordmatchfield": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "related_match_fields": {
                        "type_data": "Type : Subcomponent\nRequired\nAllows multiple values",
                        "description": "The fields on the related object that must match. Allows facetable fields on the filter_object."
                    },
                    "related_inbound_field": {
                        "type_data": "Type : Subcomponent",
                        "description": "The related object field for the filter. If the relationship_type is INBOUND, this can be either a parent or reference field. For JOIN relationships, this must be a parent field"
                    },
                    "relationship_type": {
                        "type_data": "Type : String\nRequired\nMaximum length : 50",
                        "description": "The type of the relationship, either INBOUND or JOIN."
                    },
                    "filter_object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "If the relationship_type is INBOUND, this must be the same as related_object. For JOIN relationships, this must reference the second parent object."
                    },
                    "related_outbound_field": {
                        "type_data": "Type : Subcomponent",
                        "description": "The related object field for the filter. If the relationship_type is INBOUND, you must omit this attribute. For JOIN relationships, this must reference the second parent field."
                    },
                    "related_object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The related object for the filter. If the relationship_type is INBOUND, this must be a non-join object. For JOIN relationships, this must be a simple or complex join."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Qualityrecordcheckinsight": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "target_object_type": {
                "type_data": "Type : Objecttype\nRequired",
                "description": "If applicable, the type of the target_object."
            },
            "probable_similarity_score": {
                "type_data": "Type : Number\nRequired\nMaximum value : 99",
                "description": "The percent (%) minimum similarity score for the Probable tier."
            },
            "target_object": {
                "type_data": "Type : Object\nRequired",
                "description": "The object on which the Quality Record Check Insight is configured."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "A description of the Quality Record Check Insight."
            },
            "likely_similarity_score": {
                "type_data": "Type : Number\nRequired\nMaximum value : 98",
                "description": "The percent (%) minimum similarity score for the Likely tier."
            }
        },
        "subcomponents": {
            "Qualityinsightrelatedrecordsummaryfield": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "related_inbound_field": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The related inbound field on the related object to summarize."
                    },
                    "summary_field": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The summary field on the related object to summarize."
                    },
                    "relationship_type": {
                        "type_data": "Type : String\nRequired\nMaximum length : 50",
                        "description": "The relationship type between the target_object of the insight configuration and the related_object."
                    },
                    "summary_object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The object from which summary results will be collected. If the relationship_type is INBOUND, the summary_object should be the same as the related_object."
                    },
                    "related_outbound_field": {
                        "type_data": "Type : Subcomponent",
                        "description": "The related outbound field on the related_object that references the summary_object. If the summary relationship_type is JOIN,this field is required. It should be left blank otherwise."
                    },
                    "related_object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The related object to the target_object of the insight configuration to use when collecting summary results. If the relationship_type is INBOUND, the related_object should be the same as the summary_object."
                    }
                },
                "subcomponents": {}
            },
            "Qualityinsightdisplayfield": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "target_object_type": {
                        "type_data": "Type : Objecttype\nRequired",
                        "description": "If applicable, the type of the target_object."
                    },
                    "target_object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The object on which the Quality Record Check Insight is configured."
                    },
                    "display_field": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The field of the target object of the Quality Record Check Insight to display in the Insights UI."
                    },
                    "order": {
                        "type_data": "Type : Number\nRequired\nMaximum value : 10000\nMinimum value : 1",
                        "description": "Numeric value used to determine the order the displayed fields appear in the Insights UI."
                    },
                    "display_type_field": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The type field of the target_object_type for the display_field to display in the UI."
                    }
                },
                "subcomponents": {}
            },
            "Qualityinsightsummaryfield": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "summary_type_field": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The type field of the target_object_type for the summary_field to collect field suggestion data for."
                    },
                    "target_object_type": {
                        "type_data": "Type : Objecttype\nRequired",
                        "description": "If applicable, the type of the target_object."
                    },
                    "summary_field": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The field of the target object of the Quality Record Check Insight to collect field suggestion data for. This supports Boolean, Object, and Picklist references."
                    },
                    "target_object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The object on which the Quality Record Check Insight is configured."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Qualityrecordchecklifecycleassociation": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "lifecycle_states_to_include": {
                "type_data": "Type : Subcomponent\nAllows multiple values",
                "description": "The lifecycle states from the object_lifecycle to include in the recurrence check."
            },
            "lifecycle_states_to_not_transition": {
                "type_data": "Type : Subcomponent\nAllows multiple values",
                "description": "If populated, target object records in the indicated lifecycle state(s) will not change state when a user performs a record check."
            },
            "object_lifecycle": {
                "type_data": "Type : Objectlifecycle\nRequired",
                "description": "The lifecycle of the target_object."
            },
            "quality_record_check": {
                "type_data": "Type : ComponentReference\nRequired",
                "description": "References the Qualityrecordcheck."
            }
        },
        "subcomponents": {
            "Qualityrelationshipstatemapassociation": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "object_lifecycle": {
                        "type_data": "Type : Objectlifecycle\nRequired",
                        "description": "The lifecycle of the target_object."
                    },
                    "object_lifecycle_state": {
                        "type_data": "Type : Subcomponent",
                        "description": "The lifecycle state of the object_lifecycle."
                    },
                    "quality_object_relationship_config": {
                        "type_data": "Type : ComponentReference\nRequired",
                        "description": "The associated Qualityobjectrelationshipconfig."
                    },
                    "quality_picklist_value_map": {
                        "type_data": "Type : SubcomponentReference\nRequired",
                        "description": "References the picklist values available on a relationship configuration. For example, is a Duplicate of or is a Follow-up of."
                    },
                    "quality_record_check": {
                        "type_data": "Type : ComponentReference\nRequired",
                        "description": "References the Qualityrecordcheck."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Qualityreportabilitydecisiontreeconfig": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "A description of the Reportability Decision Tree configuration."
            },
            "reportability_assessment_type": {
                "type_data": "Type : Objecttype\nRequired",
                "description": "The type of Reportability Assessment to create a decision tree for."
            }
        },
        "subcomponents": {
            "Qualityrdtqualifier": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "description": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "A description of the Decision Tree Qualifier."
                    },
                    "object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The object for which to link to a Reportability Assessment. For example, country__v."
                    },
                    "object_field": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The field on the selected object."
                    },
                    "picklist": {
                        "type_data": "Type : Picklist\nRequired",
                        "description": "References the picklist associated with the selected object_field. This is not visible in the UI."
                    },
                    "picklist_value": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "References the picklist value selected from the picklist."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Qualityteam": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active. If the component or subcomponent is inactive, no one in the Vault can edit team membership using this team or Team Role."
            },
            "destination_state": {
                "type_data": "Type : Subcomponent",
                "description": "If change state on team completion is selected, this is the state the team enabled record will change into. \n Note: This is required on change state when team completion is selected."
            },
            "initial_state": {
                "type_data": "Type : Subcomponent",
                "description": "If change state on team completion is selected, it will only occur while team complete happens if the team enabled record is in this state. \n Note: Required change state when team completion is selected."
            },
            "record_trigger": {
                "type_data": "Type : ComponentReference",
                "description": "References a record trigger component."
            },
            "process_relationships": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "No function at this time."
            },
            "locked_in_states": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "While the record is any one of these states, no user in the Vault may change team member assignments for any role. This supersedes all security configurations. \nNote: When using cascade of team member updates between records, records in this state will not reflect team membership changes, but will also not cause an error."
            },
            "quality_team_member_object_name": {
                "type_data": "Type : String\nMaximum length : 100",
                "description": "For internal Veeva use only. Used by Vault to correctly name and associate the appropriate data storage object for a Qualityteam when migrating configurations between Vaults."
            },
            "objecttype": {
                "type_data": "Type : Objecttype",
                "description": "If left blank, team will apply to all records of this object that do not have a team defined for this type."
            },
            "recordrole_trigger": {
                "type_data": "Type : ComponentReference",
                "description": "References a record role trigger component."
            },
            "object": {
                "type_data": "Type : Object\nRequired",
                "description": "The object the Qualityteam applies to."
            },
            "objectlifecycle": {
                "type_data": "Type : Objectlifecycle\nRequired",
                "description": "Must be the lifecycle for the selected object or type."
            }
        },
        "subcomponents": {
            "Qualityteamrolemembershiprestriction": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active. If the component or subcomponent is inactive, no one in the Vault can edit team membership using this team or Team Role."
                    },
                    "role": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "The role to which to apply the restriction. For example, Applicationrole.editor__c. Only roles with exclusive_membership set to false are eligible."
                    },
                    "exclusive_role": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "The role to restrict. Users in the specified role cannot be assigned to this role."
                    }
                },
                "subcomponents": {}
            },
            "Qualityteamrole": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active. If the component or subcomponent is inactive, no one in the Vault can edit team membership using this team or Team Role."
                    },
                    "maximum_user_in_role": {
                        "type_data": "Type : Number\nRequired\nMaximum value : 20\nMinimum value : 1",
                        "description": "Maximum number of users selected for a Team Role per record. Maximum must be greater than minimum."
                    },
                    "exclusive_membership": {
                        "type_data": "Type : Boolean",
                        "description": "If true, users in this role cannot be assigned to any other team role while assigned to this team role. If omitted, the default value is false."
                    },
                    "help_content": {
                        "type_data": "Type : String\nMaximum length : 255",
                        "description": "Hover text to display for the (?) icon in Business Admin for this object. Custom help text that appears in the UI when users hover over the field."
                    },
                    "linked_application_role": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "The role into which Team Role assignments for a team enabled record are inserted. This role defines the permissions and sharing settings role that team members will be granted."
                    },
                    "cascade_from_relationship": {
                        "type_data": "Type : Subcomponent",
                        "description": "Required if cascade behavior is set to anything other than NOT_APPLICABLE. Defines the field which indicates the record from which team assignments should be inherited."
                    },
                    "display_order": {
                        "type_data": "Type : Number\nRequired\nMaximum value : 25",
                        "description": "The order in which this Team Role will display to viewers and editors of the team enabled record."
                    },
                    "linked_field": {
                        "type_data": "Type : Subcomponent",
                        "description": "References an object field on the team-enabled object which is bound to the user__sys object. If included, Vault updates the identified user field whenever the membership of the Qualityteamrole on a given record is updated, and users are no longer able to edit that field. If omitted, the default value is null."
                    },
                    "cascade_from_multiple_relationship": {
                        "type_data": "Type : Subcomponent\nAllows multiple values",
                        "description": "The object reference fields from which the team role should inherit behavior. For example, 'Field.complaint__v','Field.medtech_capa__v\u2019."
                    },
                    "cascade_behavior": {
                        "type_data": "Type : Enum\nRequired\nAllowed values : NOT_APPLICABLE|INHERIT_ALLOW_OVERRIDE|MULTI_SOURCE_SINGLE_INHERIT|",
                        "description": "Indicates if the membership of this role can be governed by the membership of a related records Team Role. \nEnums: NOT_APPLICABLE - These team role assignments are self-governed|INHERIT_ALLOW_OVERRIDE - These team role assignments will atempt to inherit changes in team role assgnments on the record related by the cascade from the field value. This matches on application role and enables user editing team membership to override or restore team membership assignments at the record level.|MULTI_SOURCE_SINGLE_INHERIT - Allows a Quality Team Role to be inherited from any source object with an inbound relationship to the object on which the Quality Team Role is configured.|"
                    },
                    "constraining_role": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "Limits selection of users when editing this team role\u2019s membership to the current membership of the specified application role on the team enabled record."
                    },
                    "locked_in_states": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "While the record is any one of these states, no user in the Vault may change team member assignments for any role. This supersedes all security configurations. \nNote: When using cascade of team member updates between records, records in this state will not reflect team membership changes, but will also not cause an error."
                    },
                    "minimum_user_in_role": {
                        "type_data": "Type : Number\nRequired\nMaximum value : 20",
                        "description": "Minimum number of users selected for a Team Role per record. Value of zero means the role is purely optional. Population of the role will not affect team completeness record behaviors."
                    },
                    "object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The object the Qualityteam applies to."
                    },
                    "objectlifecycle": {
                        "type_data": "Type : Objectlifecycle\nRequired",
                        "description": "Must be the lifecycle for the selected object or type."
                    }
                },
                "subcomponents": {}
            },
            "Qualityteamrelatedobjectsecurity": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active. If the component or subcomponent is inactive, no one in the Vault can edit team membership using this team or Team Role."
                    },
                    "outbound_reference_field": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "Specifies the outbound reference field from the related object which defines the Quality-Team-enabled object. For example, Field.source_deviation__v."
                    },
                    "app_security_assignment": {
                        "type_data": "Type : SubcomponentReference\nRequired",
                        "description": "For internal Veeva Use only."
                    },
                    "app_security_rule": {
                        "type_data": "Type : ComponentReference\nRequired",
                        "description": "For internal Veeva Use only."
                    },
                    "quality_team_role": {
                        "type_data": "Type : ComponentReference\nRequired",
                        "description": "Specifies the Quality Team Role on the Quality Team-enabled object that defines the mapping. For example, Qualityteamrole.owner__c."
                    },
                    "application_role": {
                        "type_data": "Type : String\nRequired\nMaximum length : 1500",
                        "description": "Specifies the application role defining the access that the quality_team_role should possess on the related object. For example, Applicationrole.owner__v."
                    },
                    "related_object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The Object for which to define the security mapping. For example, Object.related_event__v."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Queue": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the field is active."
            },
            "sequential": {
                "type_data": "Type : Boolean",
                "description": "Indicates if the messages intended for this queue must be processed sequentially, meaning one after another in the order they are received. If the type is job, Vault ignores this attribute."
            },
            "message_delivery_event_handler": {
                "type_data": "Type : ComponentReference",
                "description": "Specifies the optional Spark message delivery event handler to use for outbound queues. References the Messagedeliveryeventhandler component."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 500",
                "description": "The description of the queue."
            },
            "type": {
                "type_data": "Type : Enum\nRequired\nAllowed values : inbound|outbound|job|",
                "description": "Specifies whether the queue is Outbound (sends messages), or Inbound (receives messages)."
            },
            "message_processor_user": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Indicates the user who will process messages delivered to an Inbound queue."
            },
            "rollback_on_error": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether this queue will continue the transaction when a message fails to enter the queue. If the type is job, Vault ignores this attribute."
            },
            "message_processor": {
                "type_data": "Type : ComponentReference",
                "description": "References the Messageprocessor component."
            },
            "message_delivery_event_handler_user": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Indicate the user who will process Spark message delivery event handler actions for the outbound queue. Applicable only when message_delivery_event_handler is configured."
            }
        },
        "subcomponents": {
            "Queueconnection": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the field is active."
                    },
                    "connection_type": {
                        "type_data": "Type : String\nMaximum length : 40",
                        "description": "The type of queue connection."
                    },
                    "connection_name": {
                        "type_data": "Type : String\nRequired\nMaximum length : 40",
                        "description": "The name of the connection."
                    },
                    "deliver_to_queue": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": ""
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Recordaction": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "user_input_object_type": {
                "type_data": "Type : Objecttype",
                "description": "If your action takes user input, identifies the user input object type."
            },
            "user_input_object": {
                "type_data": "Type : Object",
                "description": "If your action takes user input, identifies the user input object."
            },
            "icon": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Specifies the icon to display for your action in the Vault UI Actions menu. If omitted, no icon is displayed and the action is not eligible to appear in the the most frequently used section of the Action Bar. See the Vault Java SDK Documentation for a list of allowed values."
            },
            "type": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "The type of record action, for example, Object."
            },
            "checksum": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Used to check data for errors."
            },
            "usages": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "If specified, the action is available for configuring in the specified usages only. For example, USER_ACTION. If omitted, the action is available across all supported usages."
            },
            "source_code": {
                "type_data": "Type : SdkCode\nMaximum length : 1048576",
                "description": "The source of this record action code used to create and edit metadata. For example, Custom means this is a custom action developed with the Vault Java SDK."
            },
            "object": {
                "type_data": "Type : Object",
                "description": "The object this record action is associated to, for example, product__v."
            }
        },
        "subcomponents": {}
    },
    "Recordmergeeventhandler": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "checksum": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Used to check data for errors."
            },
            "source_code": {
                "type_data": "Type : SdkCode\nMaximum length : 1048576",
                "description": "The source of this record merge event handler and code used. Custom means this record merge event handler was developed with the Vault Java SDK."
            },
            "object": {
                "type_data": "Type : Object\nRequired",
                "description": "The object this record merge event handler is associated to, for example, product__v."
            }
        },
        "subcomponents": {}
    },
    "Recordroletrigger": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "checksum": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Used to check data for errors."
            },
            "source_code": {
                "type_data": "Type : SdkCode\nMaximum length : 1048576",
                "description": "The source of this record role trigger and code used to create and edit metadata. Custom means this record role trigger was developed with the Vault Java SDK."
            },
            "event_segment": {
                "type_data": "Type : Enum\nAllowed values : PRE_CUSTOM|POST_CUSTOM|UNSPECIFIED|",
                "description": "For internal Veeva use only. This Enum is used for a variety of features in Vault. Contains valid values for specifying eventSegment."
            },
            "events": {
                "type_data": "Type : Enum\nAllows multiple values\nAllowed values : BEFORE|AFTER|",
                "description": "The Events specifying when this record role trigger executes. For example, BEFORE means the trigger executes right before the record role assignment."
            },
            "order": {
                "type_data": "Type : Enum\nAllowed values : NUMBER_1|NUMBER_2|NUMBER_3|NUMBER_4|NUMBER_5|NUMBER_6|NUMBER_7|NUMBER_8|NUMBER_9|NUMBER_10|UNSPECIFIED|",
                "description": "If multiple triggers exist on the same object, this specifies the order this record role trigger will execute. Order 1 executes first and Order 10 executes last. UNSPECIFIED means this trigger will always execute last."
            },
            "object": {
                "type_data": "Type : Object\nRequired",
                "description": "The object this record role trigger is associated to, for example, product__v."
            }
        },
        "subcomponents": {}
    },
    "Recordtrigger": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "checksum": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Used to check data for errors."
            },
            "source_code": {
                "type_data": "Type : SdkCode\nMaximum length : 1048576",
                "description": "The source of this record trigger and code used to create and edit metadata. Custom means this record trigger was developed with the Vault Java SDK."
            },
            "event_segment": {
                "type_data": "Type : Enum\nAllowed values : PRE_CUSTOM|POST_CUSTOM|UNSPECIFIED|",
                "description": "For internal Veeva use only. This Enum is used for a variety of features in Vault. Contains valid values for specifying eventSegment."
            },
            "events": {
                "type_data": "Type : Enum\nAllows multiple values\nAllowed values : BEFORE_INSERT|AFTER_INSERT|BEFORE_UPDATE|AFTER_UPDATE|BEFORE_DELETE|AFTER_DELETE|",
                "description": "The Events specifying when this record trigger executes. For example, BEFORE_UPDATE means the trigger executes right before the record updates."
            },
            "order": {
                "type_data": "Type : Enum\nAllowed values : NUMBER_1|NUMBER_2|NUMBER_3|NUMBER_4|NUMBER_5|NUMBER_6|NUMBER_7|NUMBER_8|NUMBER_9|NUMBER_10|UNSPECIFIED|",
                "description": "If multiple triggers exist on the same object, this specifies the order this record role trigger will execute. Order 1 executes first and Order 10 executes last. UNSPECIFIED means this trigger will always execute last."
            },
            "object": {
                "type_data": "Type : Object\nRequired",
                "description": "The object this record trigger is associated to, for example,product__v."
            }
        },
        "subcomponents": {}
    },
    "Recordworkflowaction": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "checksum": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Used to check data for errors."
            },
            "source_code": {
                "type_data": "Type : SdkCode\nMaximum length : 1048576",
                "description": "The source of this workflow action. For example, Custom means this is a custom action developed with the Vault Java SDK."
            },
            "step_types": {
                "type_data": "Type : Enum\nAllows multiple values\nAllowed values : START|TASK|",
                "description": "Indicates the step types where this record workflow action is allowed to execute."
            },
            "object": {
                "type_data": "Type : Object",
                "description": "Indicates the object the record workflow action supports. This action is only available for workflows on this supported object. The default value is \"\", indicating all objects are supported."
            }
        },
        "subcomponents": {}
    },
    "Relatedrecordsetup": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "source_object_type": {
                "type_data": "Type : Objecttype\nRequired",
                "description": "The object type, if the source object allows object types."
            },
            "related_object_type": {
                "type_data": "Type : Objecttype\nRequired",
                "description": "The object type, if the related object allows object types."
            },
            "outbound_reference_field": {
                "type_data": "Type : Subcomponent\nRequired",
                "description": "The object reference field on the related object record to be created, which references the source object."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "A description of the Related Record Configuration to display in the Vault Admin UI."
            },
            "source_object": {
                "type_data": "Type : Object\nRequired",
                "description": "The source object on which the Create Related Record entry action will be configured."
            },
            "related_object": {
                "type_data": "Type : Object\nRequired",
                "description": "The object that will be created by the Create Related Record entry action."
            }
        },
        "subcomponents": {
            "Relatedrecordfieldvaluemapping": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "mapped_source_object_field": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The field on the source object to be mapped."
                    },
                    "related_object_field": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The field on the related object to be mapped."
                    },
                    "mapped_source_reference_object_field": {
                        "type_data": "Type : Subcomponent",
                        "description": "If the field value is to be derived from a field on a record related to the source object, this represents that source record\u2019s related record field."
                    },
                    "source_object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The source object on which the Create Related Record entry action will be configured."
                    },
                    "mapped_source_reference_object": {
                        "type_data": "Type : Object",
                        "description": "If the field value is to be derived from a field on a record related to the source object, this represents the object on which that field exists."
                    },
                    "related_object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The object that will be created by the Create Related Record entry action."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Renditionprofile": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "pdf_format": {
                "type_data": "Type : Enum\nRequired\nAllowed values : DEFAULT|PDFA_1B|",
                "description": "Determines the format for PDF viewable renditions."
            },
            "bookmark_expansion_level": {
                "type_data": "Type : Enum\nRequired\nAllowed values : ALL_LEVELS|LEVEL_ONE|LEVEL_TWO|LEVEL_THREE|LEVEL_FOUR|LEVEL_FIVE|",
                "description": "Determines how many level deep are expanded in the bookmark panel."
            },
            "generate_toc_lofs_bookmarks": {
                "type_data": "Type : Boolean\nRequired",
                "description": "If set to true, Vault generates bookmakrs based on the Table of Content and List of Figures."
            },
            "render_ppt_speaker_notes": {
                "type_data": "Type : Boolean\nRequired",
                "description": "If set to true, Vault includes Speaker Notes in viewable renditions for PowerPoint documents."
            },
            "pdf_print_settings": {
                "type_data": "Type : Enum\nAllowed values : NONE|ALLOW_LOW_RESOLUTION|ALLOW_HIGH_RESOLUTION|",
                "description": "If protected_pdf is true, specifies the printing resolution allowed for the PDF rendition."
            },
            "generate_bookmarks_for_title_style": {
                "type_data": "Type : Boolean\nRequired",
                "description": "If set to true, Vault generates bookmarks for Title Style."
            },
            "set_link_text_to_blue": {
                "type_data": "Type : Boolean\nRequired",
                "description": "If set to true, Vault sets link text to blue."
            },
            "generate_caption_bookmarks_tree": {
                "type_data": "Type : Boolean\nRequired",
                "description": "If set to true, Vault auto-generates bookmarks for captions."
            },
            "protected_pdf": {
                "type_data": "Type : Boolean",
                "description": "If set to true, Vault applies PDF Protection to the viewable PDF rendition."
            },
            "preprocess_pdf": {
                "type_data": "Type : Boolean",
                "description": "If set to true, Vault renders non-compliant PDF source documents according to ICH standards. Only RIM Submissions and Submissions Publishing Vaults with Generate compliant rendition for Source PDFs enabled allow non-null values for this attribute."
            },
            "pdf_edit_settings": {
                "type_data": "Type : Enum\nAllowed values : NONE|ALLOW_ASSEMBLY|ALLOW_FORMS|ALLOW_ANNOTATIONS|",
                "description": "If protected_pdf is true, specifies the type of editing allowed for the PDF rendition."
            },
            "caption_bookmarks_exclusion_types": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 43",
                "description": "Lists caption types that Vault excludes when auto-generating bookmarks based on captions.The default value is an empty String."
            },
            "content_copying_settings": {
                "type_data": "Type : Enum\nAllowed values : NONE|ENABLED|ENABLED_FOR_ACCESSIBILITY|",
                "description": "If protected_pdf is true, specifies the content allowed for copying in the PDF rendition."
            },
            "embed_fonts": {
                "type_data": "Type : Enum\nRequired\nAllowed values : DEFAULT|FULL_FONT|SUB_FONT|",
                "description": "Indicates the type of font embedding. Learn more about font embedding in Vault Help."
            },
            "include_metadata": {
                "type_data": "Type : Boolean",
                "description": "If set to true, Vault includes source document metadata in the viewable PDF rendition."
            },
            "bookmark_list_per_caption_type": {
                "type_data": "Type : Boolean",
                "description": "If set to true, Vault generates a list of bookmarks sorted into sections by caption type when auto-generating bookmarks based on captions. The default value is determined by the Generate \u201cList of\u2026\u201d bookmark sections per caption type setting in the Vault Admin UI."
            },
            "no_mark_up": {
                "type_data": "Type : Boolean\nRequired",
                "description": "If set to true, Vault does not show Markup in the viewable rendition."
            }
        },
        "subcomponents": {}
    },
    "Renditiontype": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "density": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Specifies the density of the Automated Image Rendition. The value must be numeric. You can also populate this field with a height and width value such as 300x200. You can use the following expected values: {number}| {number}x{number}|"
            },
            "format": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Specifies the format of an Automated Image Rendition"
            },
            "quality": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Specifies the the quality of an Automated Image Rendition. The value must be numeric."
            },
            "flatten_image": {
                "type_data": "Type : Boolean",
                "description": "Set to true to merge image layers into a single layer."
            },
            "include_source_doc_name": {
                "type_data": "Type : Boolean",
                "description": "Set to true to name renditions in the format {document name} - {rendition}.{format extension}."
            },
            "automated_image": {
                "type_data": "Type : Boolean",
                "description": "Indicates that the rendition is an Automated Image Rendition"
            },
            "colorspace": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Specifies the color space of an Automated Image Rendition"
            },
            "transparency": {
                "type_data": "Type : Boolean",
                "description": "Set to true to maintain transparent backgrounds from source files. Transparency is only preserved with .PNG, .GIF, .BMP, and .TIFF formats."
            },
            "resize": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Specifies the size and dimensions of an Automated Image Rendition. The value must be numeric."
            },
            "resample": {
                "type_data": "Type : Boolean",
                "description": "If true forces an image to resample, changing the image\u2019s pixel dimensions."
            }
        },
        "subcomponents": {}
    },
    "Report": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 128",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the component is active."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "A general description about the report."
            },
            "format": {
                "type_data": "Type : Enum\nRequired\nAllowed values : tabular|matrix|",
                "description": "The output format of the report. For example, a Tabular or Matrix report."
            },
            "definition": {
                "type_data": "Type : XMLString\nRequired\nMaximum length : 32000",
                "description": "The query to use to pull the data."
            },
            "layout": {
                "type_data": "Type : XMLString\nRequired\nMaximum length : 32000",
                "description": "The layout of the data."
            },
            "content_type": {
                "type_data": "Type : Enum\nRequired\nAllowed values : Document|Workflow|ReadAndUnderstand|Distribution|Bindernode|Object|Relationship|MatchedDocument|Binder|BinderSection|MultiPass|Union|",
                "description": "Specifies the type of data the report refers to."
            },
            "report_type": {
                "type_data": "Type : Reporttype",
                "description": "The Reporttype this instance of the report was created from."
            },
            "editors": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "Lists users and Groups in the Editor role. Users in this role can edit reports."
            },
            "viewers": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "Lists users and Groups in the Viewer role. Users in this role can view reports."
            },
            "owners": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "Lists users and Groups in the Owner role. Users in this role can assign other users and groups to the Owner role on reports."
            },
            "class": {
                "type_data": "Type : Enum\nAllowed values : Standard|View|",
                "description": "Indicates whether the report is Standard or Multi-Pass."
            },
            "excel_template": {
                "type_data": "Type : Reportexceltemplate",
                "description": "Indicates which, if any, Excel template is associated with the report."
            },
            "fit_pdf_to_page": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether all columns should fit on a single page in the exported PDF."
            },
            "tags": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500\nOrdered : True",
                "description": "Any tags assigned to the report."
            },
            "include_full_longtext": {
                "type_data": "Type : Boolean",
                "description": "If true, Vault includes the full text of long text fields in exports. If false or omitted, exports only contain the first 250 characters."
            },
            "include_full_richtext": {
                "type_data": "Type : Boolean",
                "description": "If true, Vault includes the full text of rich text fields in exports. If false or omitted, exports only contain the first 250 characters."
            },
            "include_richtext_html_tags": {
                "type_data": "Type : Boolean",
                "description": "If true, Vault includes HTML markup in exports. This option is only available if include_full_richtext= true."
            }
        },
        "subcomponents": {}
    },
    "Reportexceltemplate": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "filename": {
                "type_data": "Type : String\nRequired\nMaximum length : 1500",
                "description": "The name of the uploaded Excel template."
            },
            "template_file": {
                "type_data": "Type : File\nRequired",
                "description": "A reference to the Excel template file within Vault\u2019s file system."
            }
        },
        "subcomponents": {}
    },
    "Reporttype": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 65",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the component is active."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "A general description about the report type."
            },
            "primary_objects": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 255",
                "description": "This attribute supports future functionality and cannot be used at this time."
            },
            "primary_object": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "Primary entity or Object for the report type, for example, Document."
            },
            "configuration": {
                "type_data": "Type : XMLString\nRequired\nMaximum length : 32000",
                "description": "Details of the report type."
            },
            "class": {
                "type_data": "Type : Enum\nAllowed values : Standard|MultiPass|UnionAll|",
                "description": "Indicates whether the report is Standard or Multi-Pass. The UnionAll report type exists to support future functionality and cannot be used at this time."
            }
        },
        "subcomponents": {}
    },
    "Rimeventchangedetail": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "detail_description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "General description of the event change detail."
            },
            "detail_object": {
                "type_data": "Type : Object\nRequired",
                "description": "The associated Event relationship object. For example, Object.event_product_characteristic__v."
            },
            "detail_object_type": {
                "type_data": "Type : Objecttype",
                "description": "The object type of the associated detail_object. For example, Objecttype.event_product_characteristic__v.basic_udi_attributes__v."
            }
        },
        "subcomponents": {
            "Rimeventchangedetailfield": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "detail_field_is_required": {
                        "type_data": "Type : Boolean",
                        "description": "If true, users must complete this field when using the wizard."
                    },
                    "detail_object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "The associated Event relationship object. For example, Object.event_product_characteristic__v."
                    },
                    "detail_field": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "The associated Event relationship object field."
                    },
                    "detail_field_order": {
                        "type_data": "Type : Number\nRequired\nMinimum value : 1",
                        "description": "The relative order in which to display the field in the Vault UI."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Rimeventchangetype": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "related_change_type_add": {
                "type_data": "Type : Subcomponent\nRequired",
                "description": "The corresponding value from the Related Change Type picklist to be added to Event details for the Add change type."
            },
            "related_change_type_picklist": {
                "type_data": "Type : Picklist\nRequired",
                "description": "The associated Related Change Type Picklist. See Vault Help for configuration details."
            },
            "primary_event_change_detail": {
                "type_data": "Type : ComponentReference\nRequired",
                "description": "The Primary Event Change Detail for the change type. References a single Rimeventchangedetail record. For example, Rimeventchangedetail.packaginglevel_drug_shelf_life_details__v."
            },
            "related_change_type_replacing": {
                "type_data": "Type : Subcomponent\nRequired",
                "description": "The corresponding value from the Related Change Type picklist to be populated on Event details that will replace existing Event details for the Replace change type."
            },
            "related_change_type_withdraw": {
                "type_data": "Type : Subcomponent\nRequired",
                "description": "The corresponding value from the Related Change Type picklist to be populated on Event details for the Withdraw change type."
            },
            "related_change_type_replaced_by": {
                "type_data": "Type : Subcomponent\nRequired",
                "description": "The corresponding value from the Related Change Type picklist to be populated on Event details that will be replaced by another Event detail for the Replace change type."
            },
            "type_description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "A general description of the event change type."
            }
        },
        "subcomponents": {
            "Rimeventchangetypedetail": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "type_detail": {
                        "type_data": "Type : ComponentReference\nRequired",
                        "description": "Reference to the associated Rimeventchangedetail."
                    },
                    "detail_order": {
                        "type_data": "Type : Number\nRequired\nMinimum value : 1",
                        "description": "The relative order in which to display the detail in the Vault UI."
                    },
                    "detail_is_required": {
                        "type_data": "Type : Boolean",
                        "description": "If true, users must complete this detail when using the wizard."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Rolepermissionset": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "permission_sets": {
                "type_data": "Type : Permissionset\nRequired\nAllows multiple values",
                "description": "Lists the permission sets for a given application role. Limited to a list of one."
            },
            "application_role": {
                "type_data": "Type : String\nRequired\nMaximum length : 60",
                "description": "The application role to which the permission set or sets applies."
            }
        },
        "subcomponents": {}
    },
    "Savedview": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "A general description of the saved view."
            },
            "tab": {
                "type_data": "Type : Tab",
                "description": "The tab where the saved view appears."
            },
            "created_by": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "The username of the user who created the saved view."
            },
            "icon": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "The icon that appears next to the saved view."
            },
            "search_criteria": {
                "type_data": "Type : String\nMaximum length : 32000",
                "description": "The filters that the saved view applies."
            },
            "view_layout": {
                "type_data": "Type : String\nMaximum length : 3000",
                "description": "The columns displayed for REPORTING (Tabular in UI) type layouts, including order and width information. Learn more about layout types in Vault Help."
            },
            "mandatory": {
                "type_data": "Type : Boolean",
                "description": "Determines if the view is displayed in the Views section of the tab."
            },
            "view_layout_type": {
                "type_data": "Type : Enum\nAllowed values : DETAIL|TILE|COMPACT|REPORTING|",
                "description": "The layout type of the saved view."
            },
            "search_criteria_list": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 32000",
                "description": "A serialized string representing a list of search criteria for each section of an expanded search."
            },
            "collection": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "The name of the collection used on an expanded search being saved with the view."
            },
            "report_layouts": {
                "type_data": "Type : String\nMaximum length : 32000",
                "description": "The column positions and widths of an expanded search."
            },
            "vql_search_criteria": {
                "type_data": "Type : String\nMaximum length : 32000",
                "description": "The VQL expression that defines what Vault shows in the view."
            },
            "managed": {
                "type_data": "Type : Boolean",
                "description": "Inherits the value of mandatory. If true, the view can be included in configuration migration packages."
            },
            "owner": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "The user who created the view."
            },
            "status": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "If active, Vault shows the view in the View section of a tab."
            },
            "grid_id": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "For internal Veeva use only."
            },
            "grid_location": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "For internal Veeva use only."
            },
            "object_public_key": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "For internal Veeva use only."
            },
            "view_type": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "For internal Veeva use only."
            }
        },
        "subcomponents": {}
    },
    "Sdkjob": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "idempotent": {
                "type_data": "Type : Boolean",
                "description": "If true, Vault automatically restarts the job if interrupted by a system failure."
            },
            "visible": {
                "type_data": "Type : Boolean",
                "description": "If true, the job appears in the Scheduled, Running, and History tables in the Job Admin UI."
            },
            "admin_configurable": {
                "type_data": "Type : Boolean",
                "description": "If true, the job processor is available to be called with custom SDK code or by configuration by an Admin as a Job Definition in the Vault UI."
            },
            "checksum": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Used to check data for errors."
            },
            "source_code": {
                "type_data": "Type : SdkCode\nMaximum length : 1048576",
                "description": "The source code of this SDK job. Standard indicates a Vault-supplied, read-only job."
            }
        },
        "subcomponents": {}
    },
    "Searchablefield": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "field": {
                "type_data": "Type : Subcomponent\nRequired",
                "description": "Defines the object field (by [name]) of the searchable field, for example, abbreviation__v. \nOptional in some Vault Applications."
            },
            "required": {
                "type_data": "Type : Boolean",
                "description": "Whether this component must exist (every Object must have at least one)."
            },
            "object": {
                "type_data": "Type : Object\nRequired",
                "description": "Defines the object (by [name]) that the searchable field belongs to, for example, country__v. \nOptional in some Vault Applications."
            }
        },
        "subcomponents": {}
    },
    "Searchcollection": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "A description of the collection which users see when they click the question mark (?) icon on the expanded search results page."
            }
        },
        "subcomponents": {
            "Searchcollectionsection": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "vql_criteria": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "A Criteria VQL expression that defines the search scope of this collection."
                    },
                    "object_type": {
                        "type_data": "Type : Objecttype\nAllows multiple values",
                        "description": "The object type to filter on, if object types are enabled for the selected object."
                    },
                    "object_relationships": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                        "description": "Relationships to objects in the collection. Each value must include a valid inbound relationship. You can configure object relationships from Admin > Configuration > Objects > {Object} > Relationships."
                    },
                    "include_on_tab": {
                        "type_data": "Type : Boolean",
                        "description": "If true, allows expanded searches on the collection in the related tab, if one is available for the selected object."
                    },
                    "tab_assignments": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 255",
                        "description": "If include_on_tab is true and the object has more than one tab available, specifies the tabs where users can access the collection."
                    },
                    "object": {
                        "type_data": "Type : Object",
                        "description": "The object to include in the collection."
                    },
                    "document_type": {
                        "type_data": "Type : Doctype",
                        "description": "The document type to include in the collection."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Securityprofile": {
        "attributes": {
            "permission_sets": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 100",
                "description": "List of permiission sets contained within the profile."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the component is active."
            },
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 100",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "Description of the security profile."
            }
        },
        "subcomponents": {}
    },
    "Sharingrule": {
        "attributes": {
            "criteria": {
                "type_data": "Type : Expression\nMaximum length : 4000",
                "description": "A VQL statement where clause that returns a list of records of the specified object type."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "A general description of the rule."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the component is active."
            },
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 100",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "object": {
                "type_data": "Type : String\nRequired\nMaximum length : 46",
                "description": "The type of object the rule applies to."
            }
        },
        "subcomponents": {
            "Sharingrole": {
                "attributes": {
                    "members": {
                        "type_data": "Type : String\nAllows multiple values\nMaximum length : 256",
                        "description": "A list of the groups and/or users that will be given the associated permission. \n To specify users: User.user@domain.com. \nTo specify groups: Group.public_key__v."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Signaturepage": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "signature_block_02": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Signature block 2"
            },
            "signature_block_01": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Signataure block 1"
            },
            "file": {
                "type_data": "Type : File",
                "description": "Reference to the file"
            },
            "footer_01": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Footer row 1"
            },
            "footer_02": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Footer row 2"
            },
            "header_01": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Header row 1"
            },
            "location": {
                "type_data": "Type : Enum\nAllowed values : start__v|end__v|",
                "description": "Specifies whether the signature page appears at the beginning or end of the document."
            },
            "header_02": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Header row 2"
            }
        },
        "subcomponents": {}
    },
    "Tab": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "order": {
                "type_data": "Type : Number\nRequired",
                "description": "The relative order of the tabs within Vault\u2019s navigation bar."
            },
            "dashboard": {
                "type_data": "Type : String\nMaximum length : 50",
                "description": "When set to the name of a dashboard, sets this component to a dashboard Tab."
            },
            "object": {
                "type_data": "Type : String\nMaximum length : 50",
                "description": "(Object tabs) The Object to display records for e.g. product__v."
            },
            "doctype": {
                "type_data": "Type : String\nMaximum length : 50",
                "description": "(Document type tab) The Doctype to display documents for e.g., promotional_piece__c."
            },
            "subtype": {
                "type_data": "Type : String\nMaximum length : 100",
                "description": "(Document type tab) The Doctype subtype to display documents for e.g. promotional_piece__c.advertising__c."
            },
            "classification": {
                "type_data": "Type : String\nMaximum length : 150",
                "description": "(Document type tab) The Doctype classification to display documents for e.g. promotional_piece__c.advertising__c.print__c."
            },
            "url": {
                "type_data": "Type : LongString\nMaximum length : 2048",
                "description": "The target URL (if a web Tab)."
            },
            "send_session_via_post_message": {
                "type_data": "Type : Boolean",
                "description": "Whether to send the user\u2019s current session token (if a web Tab)."
            },
            "parent": {
                "type_data": "Type : String\nMaximum length : 43",
                "description": "Name of the parent Tab."
            },
            "all_view_label": {
                "type_data": "Type : String\nMaximum length : 50",
                "description": "UI-friendly string in All view."
            },
            "my_view_label": {
                "type_data": "Type : String\nMaximum length : 50",
                "description": "UI-friendly string in My view."
            },
            "recent_view_label": {
                "type_data": "Type : String\nMaximum length : 50",
                "description": "UI-friendly string in Recent view."
            },
            "object_type": {
                "type_data": "Type : Objecttype",
                "description": "The Objecttype (if an object type Tab)."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "filter_criteria": {
                "type_data": "Type : String\nMaximum length : 32000",
                "description": "Contains the set of fields, operators, and values to be applied as filters for the search results in the tab."
            },
            "prevent_create": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether record creation is allowed in an object tab."
            },
            "modal_create_record": {
                "type_data": "Type : Boolean",
                "description": "Determines if a new record should be created in a pop-up modal."
            },
            "related_object_ids": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Contains a list of object API keys to be used as related object filters in the tab."
            },
            "page": {
                "type_data": "Type : Page",
                "description": "For internal Veeva use only."
            },
            "default_view": {
                "type_data": "Type : Savedview",
                "description": "The Savedview that Vault displays to users who are viewing the tab for the first time or have not selected another view. You can only set the default view to mandatory saved views."
            },
            "enable_global_search": {
                "type_data": "Type : Boolean",
                "description": "For internal Veeva use only."
            },
            "global_search_placeholder": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "For internal Veeva use only."
            },
            "related_section": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "When a user creates a saved view for a related list in a dynamic tab, Vault creates a Tab record and indicates the source page layout and related object type in this field."
            }
        },
        "subcomponents": {
            "Subtab": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nRequired\nMaximum length : 40",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "order": {
                        "type_data": "Type : Number\nRequired",
                        "description": "The relative order of the tabs within Vault\u2019s navigation bar."
                    },
                    "dashboard": {
                        "type_data": "Type : String\nMaximum length : 50",
                        "description": "When set to the name of a dashboard, sets this component to a dashboard Tab."
                    },
                    "object": {
                        "type_data": "Type : String\nMaximum length : 50",
                        "description": "(Object tabs) The Object to display records for e.g. product__v."
                    },
                    "doctype": {
                        "type_data": "Type : String\nMaximum length : 50",
                        "description": "(Document type tab) The Doctype to display documents for e.g., promotional_piece__c."
                    },
                    "subtype": {
                        "type_data": "Type : String\nMaximum length : 100",
                        "description": "(Document type tab) The Doctype subtype to display documents for e.g. promotional_piece__c.advertising__c."
                    },
                    "classification": {
                        "type_data": "Type : String\nMaximum length : 150",
                        "description": "(Document type tab) The Doctype classification to display documents for e.g. promotional_piece__c.advertising__c.print__c."
                    },
                    "url": {
                        "type_data": "Type : LongString\nMaximum length : 2048",
                        "description": "The target URL (if a web Tab)."
                    },
                    "send_session_via_post_message": {
                        "type_data": "Type : Boolean",
                        "description": "Whether to send the user\u2019s current session token (if a web Tab)."
                    },
                    "parent": {
                        "type_data": "Type : String\nMaximum length : 43",
                        "description": "Name of the parent Tab."
                    },
                    "all_view_label": {
                        "type_data": "Type : String\nMaximum length : 50",
                        "description": "UI-friendly string in All view."
                    },
                    "my_view_label": {
                        "type_data": "Type : String\nMaximum length : 50",
                        "description": "UI-friendly string in My view."
                    },
                    "recent_view_label": {
                        "type_data": "Type : String\nMaximum length : 50",
                        "description": "UI-friendly string in Recent view."
                    },
                    "object_type": {
                        "type_data": "Type : Objecttype",
                        "description": "The Objecttype (if an object type Tab)."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "filter_criteria": {
                        "type_data": "Type : String\nMaximum length : 32000",
                        "description": "Contains the set of fields, operators, and values to be applied as filters for the search results in the tab."
                    },
                    "prevent_create": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether record creation is allowed in an object tab."
                    },
                    "modal_create_record": {
                        "type_data": "Type : Boolean",
                        "description": "Determines if a new record should be created in a pop-up modal."
                    },
                    "related_object_ids": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "Contains a list of object API keys to be used as related object filters in the tab."
                    },
                    "page": {
                        "type_data": "Type : Page",
                        "description": "For internal Veeva use only."
                    },
                    "default_view": {
                        "type_data": "Type : Savedview",
                        "description": "The Savedview that Vault displays to users who are viewing the tab for the first time or have not selected another view. You can only set the default view to mandatory saved views."
                    },
                    "enable_global_search": {
                        "type_data": "Type : Boolean",
                        "description": "For internal Veeva use only."
                    },
                    "global_search_placeholder": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "For internal Veeva use only."
                    },
                    "related_section": {
                        "type_data": "Type : String\nMaximum length : 1500",
                        "description": "When a user creates a saved view for a related list in a dynamic subtab, Vault creates a Tab record and indicates the source page layout and related object type in this field."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Tabcollection": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "help_content": {
                "type_data": "Type : String\nMaximum length : 150",
                "description": "Text that appears in the UI when users hover over the label in the tab bar."
            }
        },
        "subcomponents": {
            "Tabcollectionitem": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "tab": {
                        "type_data": "Type : Tab",
                        "description": "For items of type Tab, the Tab to include in the collection. For example, Tab.products__c."
                    },
                    "tabs": {
                        "type_data": "Type : Tab\nAllows multiple values\nOrdered : True",
                        "description": "For items of type Menu, a list of Tabs to include in the menu."
                    },
                    "type": {
                        "type_data": "Type : Enum\nRequired\nAllowed values : Tab|Menu|",
                        "description": "Indicates whether the item is a Tab or a Menu."
                    },
                    "order": {
                        "type_data": "Type : Number\nRequired",
                        "description": "The order in which the Tab appears in the Tab Collection Menu."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Tag": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nRequired\nMaximum length : 40",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "phrases": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 50",
                "description": "Text used to automatically tag document versions when an exact match is found."
            },
            "auto_tag": {
                "type_data": "Type : Boolean",
                "description": "Determines if automatic document tagging is turned on."
            },
            "include_archive": {
                "type_data": "Type : Boolean",
                "description": "Determines if archived documents should be analyzed for tagging."
            },
            "active": {
                "type_data": "Type : Boolean\nRequired",
                "description": "Indicates whether the component is active."
            }
        },
        "subcomponents": {}
    },
    "Tagsecurityrule": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "help_content": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "UI-friendly help string."
            },
            "allow_custom_objects": {
                "type_data": "Type : Boolean\nRequired",
                "description": "If true, the rule can be applied to custom objects."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "A general description of the rule"
            }
        },
        "subcomponents": {
            "Tagsecurityruleassignment": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "Reference to the Object component. An object can only be included in one Tagsecurityrule."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Userdefinedclass": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "checksum": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Used to check data for errors."
            },
            "source_code": {
                "type_data": "Type : SdkCode\nMaximum length : 1048576",
                "description": "The source of this user-defined class and code used to create and edit metadata. Custom means this UDC was developed with the Vault Java SDK."
            }
        },
        "subcomponents": {}
    },
    "Userdefinedmodel": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "parent": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "The name of the user-defined model extended by this user-defined model, if applicable."
            },
            "checksum": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Used to check data for errors."
            },
            "source_code": {
                "type_data": "Type : SdkCode\nMaximum length : 1048576",
                "description": "The source of this user-defined model and code used to create and edit metadata. Custom means this UDM was developed with the Vault Java SDK."
            },
            "serialization_include": {
                "type_data": "Type : Enum\nAllowed values : ALWAYS|IGNORE|NON_NULL|UNSPECIFIED|",
                "description": "The default serialization behavior for this user-defined model."
            }
        },
        "subcomponents": {}
    },
    "Userdefinedservice": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "checksum": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "Used to check data for errors."
            },
            "interface": {
                "type_data": "Type : String\nMaximum length : 1500",
                "description": "The name of the user-defined service extension interface that a user-defined service class implements, or blank if the user-defined service is an extension interface."
            },
            "source_code": {
                "type_data": "Type : SdkCode\nMaximum length : 1048576",
                "description": "The source of this user defined service and code used to create and edit metadata. Custom means this user defined service was developed with the Vault Java SDK."
            }
        },
        "subcomponents": {}
    },
    "Vaulttoken": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "clone_behavior": {
                "type_data": "Type : Enum\nRequired\nAllowed values : clear__sys|persist__sys|",
                "description": "Indicates whether the value attribute is cleared when the Vault is cloned."
            },
            "type": {
                "type_data": "Type : Enum\nRequired\nAllowed values : string__sys|boolean__sys|number__sys|date__sys|datetime__sys|list_string__sys|",
                "description": "The data type of the token value."
            },
            "system_managed": {
                "type_data": "Type : Boolean",
                "description": "Indicates that records are managed by the system."
            },
            "value": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "The value of the token when resolved."
            }
        },
        "subcomponents": {}
    },
    "Visualhierarchyconfiguration": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "visual_hierarchy_type": {
                "type_data": "Type : Objecttype",
                "description": "The Visual Hierarchy object type. If omitted, Vault applies the configuration to all object types that do not already have a visual hierarchy configuration defined."
            }
        },
        "subcomponents": {
            "Visualhierarchyconfigurationfield": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 60",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "active": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "field": {
                        "type_data": "Type : Subcomponent\nRequired",
                        "description": "References a field on the Visual Hierarchy object."
                    },
                    "display_order": {
                        "type_data": "Type : Number\nRequired",
                        "description": "The order in which to display the field."
                    },
                    "object": {
                        "type_data": "Type : Object\nRequired",
                        "description": "This is always Object.visual_hierarchy__v."
                    }
                },
                "subcomponents": {}
            }
        }
    },
    "Webapigroup": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 60",
                "description": "UI-friendly string in the vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "description": {
                "type_data": "Type : String\nRequired\nMaximum length : 1500",
                "description": "A general description of the web API group."
            }
        },
        "subcomponents": {}
    },
    "Workflow": {
        "attributes": {
            "label": {
                "type_data": "Type : String\nMaximum length : 40",
                "description": "UI-friendly string in the Vault\u2019s base language."
            },
            "active": {
                "type_data": "Type : Boolean",
                "description": "Indicates whether the component is active."
            },
            "lifecycle": {
                "type_data": "Type : Docifecycle\nRequired\nAllows multiple values",
                "description": "The Doclifecycle to which this workflow belongs."
            },
            "description": {
                "type_data": "Type : String\nMaximum length : 255",
                "description": "Description of the workflow."
            },
            "workflow_type": {
                "type_data": "Type : String\nAllows multiple values\nMaximum length : 1500",
                "description": "The type of workflow."
            },
            "bulk_email_message": {
                "type_data": "Type : LongString\nRequired\nMaximum length : 1500",
                "description": "When the workflow is started through bulk actions, this message template will be used to inform users."
            }
        },
        "subcomponents": {
            "Workflowstep": {
                "attributes": {
                    "label": {
                        "type_data": "Type : String\nMaximum length : 40",
                        "description": "UI-friendly string in the Vault\u2019s base language."
                    },
                    "status": {
                        "type_data": "Type : Boolean",
                        "description": "Indicates whether the component is active."
                    },
                    "description": {
                        "type_data": "Type : String\nMaximum length : 255",
                        "description": "Description of the workflow."
                    },
                    "flow_type": {
                        "type_data": "Type : Enum\nRequired\nAllowed values : start|end|usertask|notification|placeholder|changestate|decision|join|action|updaterecordfield|updatesharingsettings|",
                        "description": "The type of worflow step."
                    },
                    "next_steps": {
                        "type_data": "Type : Docworkflowstep\nAllows multiple values",
                        "description": "The Docworkflowstep to move to once this step is complete."
                    }
                },
                "subcomponents": {}
            }
        }
    }
}